(()=>{"use strict";var r={497:(r,n,t)=>{t.d(n,{Z:()=>i});var e=t(537),o=t.n(e),a=t(645),s=t.n(a)()(o());s.push([r.id,".header-title {\r\n    color: var(--light);\r\n    font-family: var(--unbounded);\r\n}","",{version:3,sources:["webpack://./src/styles/header.css"],names:[],mappings:"AAAA;IACI,mBAAmB;IACnB,6BAA6B;AACjC",sourcesContent:[".header-title {\r\n    color: var(--light);\r\n    font-family: var(--unbounded);\r\n}"],sourceRoot:""}]);const i=s},63:(r,n,t)=>{t.d(n,{Z:()=>i});var e=t(537),o=t.n(e),a=t(645),s=t.n(a)()(o());s.push([r.id,"@import url(https://fonts.googleapis.com/css2?family=Unbounded&display=swap);"]),s.push([r.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap);"]),s.push([r.id,":root {\r\n    --light: #FFFFFF;\r\n    --dark: #0d1321;\r\n    --grey: #D2D7DF;\r\n    --unbounded: 'Unbounded', cursive;\r\n    --roboto: 'Roboto', sans-serif;\r\n}\r\n\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    /*border: 1px solid red;*/\r\n}\r\n\r\nheader {\r\n    height: 10vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: var(--dark);\r\n}\r\n\r\n.main-container {\r\n    display: flex;\r\n}\r\n\r\nnav {\r\n    flex: 2;\r\n    height: 90vh;\r\n    overflow-y: auto;\r\n}\r\n\r\nmain {\r\n    flex: 8;\r\n    height: 90vh;\r\n    overflow-y: auto;\r\n}\r\n\r\n\r\n/*Scroll bar code from: https://www.cssportal.com/css-scrollbar-generator/ */\r\n\r\n\r\n/* Firefox */\r\n\r\n* {\r\n    scrollbar-width: thin;\r\n    scrollbar-color: #747474 #DFE9EB;\r\n}\r\n\r\n\r\n/* Chrome, Edge and Safari */\r\n\r\n*::-webkit-scrollbar {\r\n    width: 4px;\r\n    width: 4px;\r\n}\r\n\r\n*::-webkit-scrollbar-track {\r\n    border-radius: 5px;\r\n    background-color: #DFE9EB;\r\n}\r\n\r\n*::-webkit-scrollbar-track:hover {\r\n    background-color: #B8C0C2;\r\n}\r\n\r\n*::-webkit-scrollbar-track:active {\r\n    background-color: #B8C0C2;\r\n}\r\n\r\n*::-webkit-scrollbar-thumb {\r\n    border-radius: 5px;\r\n    background-color: #747474;\r\n}\r\n\r\n*::-webkit-scrollbar-thumb:hover {\r\n    background-color: #747474;\r\n}\r\n\r\n*::-webkit-scrollbar-thumb:active {\r\n    background-color: #000000;\r\n}","",{version:3,sources:["webpack://./src/styles/mainLayout.css"],names:[],mappings:"AAEA;IACI,gBAAgB;IAChB,eAAe;IACf,eAAe;IACf,iCAAiC;IACjC,8BAA8B;AAClC;;AAEA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;IACtB,yBAAyB;AAC7B;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,6BAA6B;AACjC;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,OAAO;IACP,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,OAAO;IACP,YAAY;IACZ,gBAAgB;AACpB;;;AAGA,4EAA4E;;;AAG5E,YAAY;;AAEZ;IACI,qBAAqB;IACrB,gCAAgC;AACpC;;;AAGA,4BAA4B;;AAE5B;IACI,UAAU;IACV,UAAU;AACd;;AAEA;IACI,kBAAkB;IAClB,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,kBAAkB;IAClB,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Unbounded&display=swap');\r\n@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');\r\n:root {\r\n    --light: #FFFFFF;\r\n    --dark: #0d1321;\r\n    --grey: #D2D7DF;\r\n    --unbounded: 'Unbounded', cursive;\r\n    --roboto: 'Roboto', sans-serif;\r\n}\r\n\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    /*border: 1px solid red;*/\r\n}\r\n\r\nheader {\r\n    height: 10vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: var(--dark);\r\n}\r\n\r\n.main-container {\r\n    display: flex;\r\n}\r\n\r\nnav {\r\n    flex: 2;\r\n    height: 90vh;\r\n    overflow-y: auto;\r\n}\r\n\r\nmain {\r\n    flex: 8;\r\n    height: 90vh;\r\n    overflow-y: auto;\r\n}\r\n\r\n\r\n/*Scroll bar code from: https://www.cssportal.com/css-scrollbar-generator/ */\r\n\r\n\r\n/* Firefox */\r\n\r\n* {\r\n    scrollbar-width: thin;\r\n    scrollbar-color: #747474 #DFE9EB;\r\n}\r\n\r\n\r\n/* Chrome, Edge and Safari */\r\n\r\n*::-webkit-scrollbar {\r\n    width: 4px;\r\n    width: 4px;\r\n}\r\n\r\n*::-webkit-scrollbar-track {\r\n    border-radius: 5px;\r\n    background-color: #DFE9EB;\r\n}\r\n\r\n*::-webkit-scrollbar-track:hover {\r\n    background-color: #B8C0C2;\r\n}\r\n\r\n*::-webkit-scrollbar-track:active {\r\n    background-color: #B8C0C2;\r\n}\r\n\r\n*::-webkit-scrollbar-thumb {\r\n    border-radius: 5px;\r\n    background-color: #747474;\r\n}\r\n\r\n*::-webkit-scrollbar-thumb:hover {\r\n    background-color: #747474;\r\n}\r\n\r\n*::-webkit-scrollbar-thumb:active {\r\n    background-color: #000000;\r\n}"],sourceRoot:""}]);const i=s},926:(r,n,t)=>{t.d(n,{Z:()=>i});var e=t(537),o=t.n(e),a=t(645),s=t.n(a)()(o());s.push([r.id,"nav {\r\n    font-family: var(--roboto);\r\n    background-color: var(--dark);\r\n    color: var(--light);\r\n    padding-left: 8px;\r\n    padding-right: 8px;\r\n}\r\n\r\nnav ul {\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n}\r\n\r\nnav li button {\r\n    color: var(--light);\r\n    background-color: var(--dark);\r\n    padding: 2px;\r\n    border-radius: 8px;\r\n    border: transparent;\r\n    font-size: larger;\r\n    margin-top: 4px;\r\n    margin-bottom: 4px;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n}\r\n\r\nnav li button:hover {\r\n    color: var(--dark);\r\n    background-color: var(--light);\r\n    transition: 0.3s;\r\n}\r\n\r\nnav span {\r\n    font-size: xx-large;\r\n    font-weight: 700;\r\n}\r\n\r\n#add-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 6px;\r\n}\r\n\r\n#add {\r\n    color: var(--dark);\r\n    background-color: var(--light);\r\n    font-weight: 700;\r\n}\r\n\r\n.icon {\r\n    height: 26.4px;\r\n    width: 26.4px;\r\n    filter: invert(100%) sepia(99%) saturate(119%) hue-rotate(196deg) brightness(116%) contrast(100%);\r\n}\r\n\r\n.badger {\r\n    display: inline;\r\n    background-color: var(--light);\r\n    padding: 1px;\r\n    color: var(--dark);\r\n    border-radius: 2px;\r\n}","",{version:3,sources:["webpack://./src/styles/nav.css"],names:[],mappings:"AAAA;IACI,0BAA0B;IAC1B,6BAA6B;IAC7B,mBAAmB;IACnB,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;IAChB,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;IACnB,6BAA6B;IAC7B,YAAY;IACZ,kBAAkB;IAClB,mBAAmB;IACnB,iBAAiB;IACjB,eAAe;IACf,kBAAkB;IAClB,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,8BAA8B;IAC9B,gBAAgB;AACpB;;AAEA;IACI,mBAAmB;IACnB,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,8BAA8B;IAC9B,gBAAgB;AACpB;;AAEA;IACI,cAAc;IACd,aAAa;IACb,iGAAiG;AACrG;;AAEA;IACI,eAAe;IACf,8BAA8B;IAC9B,YAAY;IACZ,kBAAkB;IAClB,kBAAkB;AACtB",sourcesContent:["nav {\r\n    font-family: var(--roboto);\r\n    background-color: var(--dark);\r\n    color: var(--light);\r\n    padding-left: 8px;\r\n    padding-right: 8px;\r\n}\r\n\r\nnav ul {\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n}\r\n\r\nnav li button {\r\n    color: var(--light);\r\n    background-color: var(--dark);\r\n    padding: 2px;\r\n    border-radius: 8px;\r\n    border: transparent;\r\n    font-size: larger;\r\n    margin-top: 4px;\r\n    margin-bottom: 4px;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n}\r\n\r\nnav li button:hover {\r\n    color: var(--dark);\r\n    background-color: var(--light);\r\n    transition: 0.3s;\r\n}\r\n\r\nnav span {\r\n    font-size: xx-large;\r\n    font-weight: 700;\r\n}\r\n\r\n#add-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 6px;\r\n}\r\n\r\n#add {\r\n    color: var(--dark);\r\n    background-color: var(--light);\r\n    font-weight: 700;\r\n}\r\n\r\n.icon {\r\n    height: 26.4px;\r\n    width: 26.4px;\r\n    filter: invert(100%) sepia(99%) saturate(119%) hue-rotate(196deg) brightness(116%) contrast(100%);\r\n}\r\n\r\n.badger {\r\n    display: inline;\r\n    background-color: var(--light);\r\n    padding: 1px;\r\n    color: var(--dark);\r\n    border-radius: 2px;\r\n}"],sourceRoot:""}]);const i=s},666:(r,n,t)=>{t.d(n,{Z:()=>i});var e=t(537),o=t.n(e),a=t(645),s=t.n(a)()(o());s.push([r.id,'main {\r\n    padding: 5%;\r\n}\r\n\r\nmain li {\r\n    margin-top: 12px;\r\n    display: grid;\r\n    column-gap: 10px;\r\n    grid-template-columns: 2fr 28px 6fr 28px 1fr 1fr 28px;\r\n    text-align: center;\r\n    font-family: var(--roboto);\r\n    background-color: rgb(241, 241, 241);\r\n    padding: 4px;\r\n    border-radius: 6px;\r\n    border-left: 4px solid var(--dark);\r\n    line-height: 30px;\r\n}\r\n\r\nmain li button {\r\n    background-color: transparent;\r\n    border: none;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n}\r\n\r\nmain img[alt="Delete Icon"] {\r\n    filter: invert(27%) sepia(50%) saturate(2918%) hue-rotate(344deg) brightness(83%) contrast(90%) !important;\r\n}\r\n\r\nmain input[type="date"] {\r\n    font-family: var(--roboto);\r\n    border: none;\r\n    border-radius: 8px;\r\n    font-size: small;\r\n}\r\n\r\nmain li button:hover {\r\n    background-color: rgb(210, 210, 210);\r\n    border-radius: 50%;\r\n    transition: 0.3s;\r\n}\r\n\r\nmain li input {\r\n    cursor: pointer;\r\n}\r\n\r\nmain li button img {\r\n    filter: brightness(0) !important;\r\n}\r\n\r\nmain span {\r\n    text-overflow: ellipsis;\r\n}\r\n\r\nmain>button {\r\n    margin-top: 12px;\r\n    display: block;\r\n    width: 100%;\r\n    text-align: center;\r\n    background-color: var(--dark);\r\n    color: var(--light);\r\n    font-family: var(--roboto);\r\n    padding: 3px;\r\n    border-radius: 8px;\r\n    border: transparent;\r\n    cursor: pointer;\r\n    font-size: x-large;\r\n    transition: 0.3s;\r\n}\r\n\r\nmain>button:hover {\r\n    transition: 0.3s;\r\n    background-color: #4f5053;\r\n}',"",{version:3,sources:["webpack://./src/styles/tasks.css"],names:[],mappings:"AAAA;IACI,WAAW;AACf;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,gBAAgB;IAChB,qDAAqD;IACrD,kBAAkB;IAClB,0BAA0B;IAC1B,oCAAoC;IACpC,YAAY;IACZ,kBAAkB;IAClB,kCAAkC;IAClC,iBAAiB;AACrB;;AAEA;IACI,6BAA6B;IAC7B,YAAY;IACZ,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,0GAA0G;AAC9G;;AAEA;IACI,0BAA0B;IAC1B,YAAY;IACZ,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,oCAAoC;IACpC,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,gCAAgC;AACpC;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,gBAAgB;IAChB,cAAc;IACd,WAAW;IACX,kBAAkB;IAClB,6BAA6B;IAC7B,mBAAmB;IACnB,0BAA0B;IAC1B,YAAY;IACZ,kBAAkB;IAClB,mBAAmB;IACnB,eAAe;IACf,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,yBAAyB;AAC7B",sourcesContent:['main {\r\n    padding: 5%;\r\n}\r\n\r\nmain li {\r\n    margin-top: 12px;\r\n    display: grid;\r\n    column-gap: 10px;\r\n    grid-template-columns: 2fr 28px 6fr 28px 1fr 1fr 28px;\r\n    text-align: center;\r\n    font-family: var(--roboto);\r\n    background-color: rgb(241, 241, 241);\r\n    padding: 4px;\r\n    border-radius: 6px;\r\n    border-left: 4px solid var(--dark);\r\n    line-height: 30px;\r\n}\r\n\r\nmain li button {\r\n    background-color: transparent;\r\n    border: none;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n}\r\n\r\nmain img[alt="Delete Icon"] {\r\n    filter: invert(27%) sepia(50%) saturate(2918%) hue-rotate(344deg) brightness(83%) contrast(90%) !important;\r\n}\r\n\r\nmain input[type="date"] {\r\n    font-family: var(--roboto);\r\n    border: none;\r\n    border-radius: 8px;\r\n    font-size: small;\r\n}\r\n\r\nmain li button:hover {\r\n    background-color: rgb(210, 210, 210);\r\n    border-radius: 50%;\r\n    transition: 0.3s;\r\n}\r\n\r\nmain li input {\r\n    cursor: pointer;\r\n}\r\n\r\nmain li button img {\r\n    filter: brightness(0) !important;\r\n}\r\n\r\nmain span {\r\n    text-overflow: ellipsis;\r\n}\r\n\r\nmain>button {\r\n    margin-top: 12px;\r\n    display: block;\r\n    width: 100%;\r\n    text-align: center;\r\n    background-color: var(--dark);\r\n    color: var(--light);\r\n    font-family: var(--roboto);\r\n    padding: 3px;\r\n    border-radius: 8px;\r\n    border: transparent;\r\n    cursor: pointer;\r\n    font-size: x-large;\r\n    transition: 0.3s;\r\n}\r\n\r\nmain>button:hover {\r\n    transition: 0.3s;\r\n    background-color: #4f5053;\r\n}'],sourceRoot:""}]);const i=s},645:r=>{r.exports=function(r){var n=[];return n.toString=function(){return this.map((function(n){var t="",e=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),e&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=r(n),e&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(r,t,e,o,a){"string"==typeof r&&(r=[[null,r,void 0]]);var s={};if(e)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(s[c]=!0)}for(var l=0;l<r.length;l++){var A=[].concat(r[l]);e&&s[A[0]]||(void 0!==a&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=a),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),n.push(A))}},n}},537:r=>{r.exports=function(r){var n=r[1],t=r[3];if(!t)return n;if("function"==typeof btoa){var e=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(e),a="/*# ".concat(o," */"),s=t.sources.map((function(r){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(r," */")}));return[n].concat(s).concat([a]).join("\n")}return[n].join("\n")}},379:r=>{var n=[];function t(r){for(var t=-1,e=0;e<n.length;e++)if(n[e].identifier===r){t=e;break}return t}function e(r,e){for(var a={},s=[],i=0;i<r.length;i++){var c=r[i],l=e.base?c[0]+e.base:c[0],A=a[l]||0,d="".concat(l," ").concat(A);a[l]=A+1;var u=t(d),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var g=o(p,e);e.byIndex=i,n.splice(i,0,{identifier:d,updater:g,references:1})}s.push(d)}return s}function o(r,n){var t=n.domAPI(n);return t.update(r),function(n){if(n){if(n.css===r.css&&n.media===r.media&&n.sourceMap===r.sourceMap&&n.supports===r.supports&&n.layer===r.layer)return;t.update(r=n)}else t.remove()}}r.exports=function(r,o){var a=e(r=r||[],o=o||{});return function(r){r=r||[];for(var s=0;s<a.length;s++){var i=t(a[s]);n[i].references--}for(var c=e(r,o),l=0;l<a.length;l++){var A=t(a[l]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}a=c}}},569:r=>{var n={};r.exports=function(r,t){var e=function(r){if(void 0===n[r]){var t=document.querySelector(r);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(r){t=null}n[r]=t}return n[r]}(r);if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");e.appendChild(t)}},216:r=>{r.exports=function(r){var n=document.createElement("style");return r.setAttributes(n,r.attributes),r.insert(n,r.options),n}},565:(r,n,t)=>{r.exports=function(r){var n=t.nc;n&&r.setAttribute("nonce",n)}},795:r=>{r.exports=function(r){var n=r.insertStyleElement(r);return{update:function(t){!function(r,n,t){var e="";t.supports&&(e+="@supports (".concat(t.supports,") {")),t.media&&(e+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(e+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),e+=t.css,o&&(e+="}"),t.media&&(e+="}"),t.supports&&(e+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(e+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(e,r,n.options)}(n,r,t)},remove:function(){!function(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r)}(n)}}}},589:r=>{r.exports=function(r,n){if(n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}}},n={};function t(e){var o=n[e];if(void 0!==o)return o.exports;var a=n[e]={id:e,exports:{}};return r[e](a,a.exports,t),a.exports}t.n=r=>{var n=r&&r.__esModule?()=>r.default:()=>r;return t.d(n,{a:n}),n},t.d=(r,n)=>{for(var e in n)t.o(n,e)&&!t.o(r,e)&&Object.defineProperty(r,e,{enumerable:!0,get:n[e]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(r){if("object"==typeof window)return window}}(),t.o=(r,n)=>Object.prototype.hasOwnProperty.call(r,n),(()=>{var r;t.g.importScripts&&(r=t.g.location+"");var n=t.g.document;if(!r&&n&&(n.currentScript&&(r=n.currentScript.src),!r)){var e=n.getElementsByTagName("script");e.length&&(r=e[e.length-1].src)}if(!r)throw new Error("Automatic publicPath is not supported in this browser");r=r.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=r})(),t.nc=void 0,(()=>{var r=t(379),n=t.n(r),e=t(795),o=t.n(e),a=t(569),s=t.n(a),i=t(565),c=t.n(i),l=t(216),A=t.n(l),d=t(589),u=t.n(d),p=t(63),g={};g.styleTagTransform=u(),g.setAttributes=c(),g.insert=s().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=A(),n()(p.Z,g),p.Z&&p.Z.locals&&p.Z.locals;var m=t(497),b={};b.styleTagTransform=u(),b.setAttributes=c(),b.insert=s().bind(null,"head"),b.domAPI=o(),b.insertStyleElement=A(),n()(m.Z,b),m.Z&&m.Z.locals&&m.Z.locals;var h=t(926),B={};B.styleTagTransform=u(),B.setAttributes=c(),B.insert=s().bind(null,"head"),B.domAPI=o(),B.insertStyleElement=A(),n()(h.Z,B),h.Z&&h.Z.locals&&h.Z.locals;var f=t(666),C={};C.styleTagTransform=u(),C.setAttributes=c(),C.insert=s().bind(null,"head"),C.domAPI=o(),C.insertStyleElement=A(),n()(f.Z,C),f.Z&&f.Z.locals&&f.Z.locals;const I=t.p+"6e93938839cb814ff0a3.svg",k=t.p+"2662cd22342b7aec3759.svg",v=t.p+"b7fbf4b82de02c03c144.svg",y=t.p+"0f8eae15be24f4e845ee.svg",x=t.p+"3270f2c93c8c138fa6cc.svg",w=t.p+"5b4bbee2e91b8855115c.svg";class E{constructor(r=[]){this.projects=r}getProjects(){return this.projects}addProject(r){this.projects.push(r)}deleteProject(r){this.projects.splice(this.projects.indexOf(r),1)}editProject(r){let n=prompt("Choose a new name for your project:");this.projects[this.projects.indexOf(r)].setName(n)}}class j{constructor(r,n=[]){this.name=r,this.tasks=n}addTask(r){this.tasks.push(r)}deleteTask(r){this.tasks.splice(this.tasks.indexOf(r),1)}setName(r){this.name=r}getName(){return this.name}getSize(){return this.tasks.length}getTasks(){return this.tasks}setTasks(r){this.tasks=r}}class T{constructor(r,n,t="0000-00-00",e=!1){this.name=r,this.description=n,this.date=t,this.isCompleted=e}setName(r){this.name=r}setDescription(r){this.description=r}setDate(r){this.date=r}setIsCompleted(r){this.isCompleted=r}getName(){return this.name}getDescription(){return this.description}getDate(){return this.date}getIsCompleted(){return this.isCompleted}}document.querySelector("body").innerHTML='\n    <header></header>\n    <div class="main-container">\n        <nav></nav>\n        <main></main>\n    </div>\n    ',document.querySelector("header").innerHTML='\n    <h1 class="header-title">✔️DoingIt</h1>\n    ',document.querySelector("nav").innerHTML=`\n    <ul>\n        <li><img class="icon" src="${I}" alt="All Icon"><button>All</button></li>\n        <li><img class="icon" src="${k}" alt="Today Icon"><button>Today</button></li>\n        <li><img class="icon" src="${v}" alt="This week Icon"><button>Next 7 days</button></li>\n    </ul>\n    <span>Projects</span>\n    <ul id="projects-list">\n    </ul>\n    <ul>\n        <li id="add-container"><button id="add">Add Project</button></li>\n    </ul>\n    `,function(){let r,n=new E;null!=localStorage.getItem("handlerData")&&(r=JSON.parse(localStorage.getItem("handlerData")));for(let t=0;t<r.projects.length;t++){let e=r.projects[t].name,o=new j(e);n.addProject(o);for(let e=0;e<r.projects[t].tasks.length;e++){let o=r.projects[t].tasks[e].name,a=r.projects[t].tasks[e].description,s=r.projects[t].tasks[e].date,i=r.projects[t].tasks[e].isCompleted,c=new T(o,a,s,i);n.getProjects()[t].addTask(c)}}document.querySelector("#add").addEventListener("click",(()=>{let r=prompt("Name your new project");if(null!=r&&""!=r){let o=new j(r);n.addProject(o),e(t,n.getProjects()),console.log(n),localStorage.setItem("handlerData",JSON.stringify(n))}}));const t=document.querySelector("#projects-list");function e(r,s){let i="";for(let r=0;r<s.length;r++)i+=`<li><img class="icon" src="${y}" alt="Project Icon"><button id="open-btn-${r}">${s[r].getName()}</button>&nbsp<div class="badger">${s[r].getSize()}</div>\n            <button id="edt-btn-${r}"><img class="icon" src="${w}" alt="Edit Icon"></button><button id="del-btn-${r}"><img class="icon" src="${x}" alt="Delete Icon"</button>\n            </li>`;r.innerHTML=i,function(r){for(let s=0;s<r.length;s++)document.getElementById(`del-btn-${s}`).onclick=()=>{n.deleteProject(r[s]),e(t,n.getProjects()),localStorage.setItem("handlerData",JSON.stringify(n))},document.getElementById(`edt-btn-${s}`).onclick=()=>{n.editProject(r[s]),e(t,n.getProjects()),localStorage.setItem("handlerData",JSON.stringify(n))},document.getElementById(`open-btn-${s}`).onclick=()=>{a(o,n.getProjects()[s]),localStorage.setItem("handlerData",JSON.stringify(n))}}(s)}const o=document.querySelector("body > div > main");function a(r,i){let c="<ul>";for(let r=0;r<i.getTasks().length;r++)c+=`<li><span>${i.getTasks()[r].getName()}</span><button id="edt-name-${r}"><img class="icon" src="${w}" alt="Edit Icon"></button>\n            <span>${i.getTasks()[r].getDescription()}</span><button id="edt-desc-${r}"><img class="icon" src="${w}" alt="Edit Icon"></button>\n            <input id="date-${r}" type="date" value="${i.getTasks()[r].getDate()}"><input id="check-${r}" type="checkbox" `,i.getTasks()[r].getIsCompleted()&&(c+="checked"),c+=i!=s?`><button id="del-${r}"><img class="icon" src="${x}" alt="Delete Icon"></button></li>`:"></li>";i!=s&&(c+='</ul><button id="add-task">Add Task</button>'),r.innerHTML=c,function(r){for(let i=0;i<r.getTasks().length;i++)document.getElementById(`edt-name-${i}`).onclick=()=>{let t=prompt("Choose a new name:");null!=t&&""!=t&&(r.getTasks()[i].setName(t),a(o,r),localStorage.setItem("handlerData",JSON.stringify(n)))},document.getElementById(`edt-desc-${i}`).onclick=()=>{let t=prompt("Choose a new description:");""==t&&(t="No description..."),null==t||(r.getTasks()[i].setDescription(t),a(o,r),localStorage.setItem("handlerData",JSON.stringify(n)))},document.getElementById(`date-${i}`).onchange=()=>{let t=document.getElementById(`date-${i}`).value;r.getTasks()[i].setDate(t),localStorage.setItem("handlerData",JSON.stringify(n))},document.getElementById(`check-${i}`).onclick=()=>{let t=document.getElementById(`check-${i}`).checked;r.getTasks()[i].setIsCompleted(t),localStorage.setItem("handlerData",JSON.stringify(n))},r!=s&&(document.getElementById(`del-${i}`).onclick=()=>{let s=r.getTasks()[i];r.deleteTask(s),a(o,r),e(t,n.getProjects()),localStorage.setItem("handlerData",JSON.stringify(n))})}(i),i!=s&&function(r,s){r.onclick=()=>{let r=prompt("Choose your task name"),i=prompt("Choose your task description");if(null!=i&&""!=i||(i="No description..."),null!=r&&""!=r){let c=new T(r,i);s.addTask(c),a(o,s),e(t,n.getProjects()),localStorage.setItem("handlerData",JSON.stringify(n))}}}(document.querySelector("#add-task"),i)}let s=new j("All");function i(){let r=[];for(let t=0;t<n.getProjects().length;t++)for(let e=0;e<n.getProjects()[t].getTasks().length;e++)r.push(n.getProjects()[t].getTasks()[e]);s.setTasks(r)}i(),a(o,s),e(t,n.getProjects()),document.querySelector("body > div > nav > ul:nth-child(1) > li:nth-child(1) > button").onclick=()=>{i(),a(o,s)},document.querySelector("body > div > nav > ul:nth-child(1) > li:nth-child(2) > button").onclick=()=>{!function(){let r=new Date,t=`${r.getFullYear()}-${r.getMonth()+1}-${r.getDate()}`,e=[];for(let r=0;r<n.getProjects().length;r++)for(let o=0;o<n.getProjects()[r].getTasks().length;o++)n.getProjects()[r].getTasks()[o].getDate()==t&&e.push(n.getProjects()[r].getTasks()[o]);s.setTasks(e)}(),a(o,s)},document.querySelector("body > div > nav > ul:nth-child(1) > li:nth-child(3) > button").onclick=()=>{!function(){let r=Date.now(),t=r+6048e5,e=[];for(let o=0;o<n.getProjects().length;o++)for(let a=0;a<n.getProjects()[o].getTasks().length;a++){let s=new Date(n.getProjects()[o].getTasks()[a].getDate());s=s.getTime(),s>r&&s<t&&e.push(n.getProjects()[o].getTasks()[a])}s.setTasks(e)}(),a(o,s)}}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,