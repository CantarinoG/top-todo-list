(()=>{"use strict";var n={497:(n,t,e)=>{e.d(t,{Z:()=>i});var r=e(537),o=e.n(r),a=e(645),s=e.n(a)()(o());s.push([n.id,".header-title {\r\n    color: var(--light);\r\n    font-family: var(--unbounded);\r\n}","",{version:3,sources:["webpack://./src/styles/header.css"],names:[],mappings:"AAAA;IACI,mBAAmB;IACnB,6BAA6B;AACjC",sourcesContent:[".header-title {\r\n    color: var(--light);\r\n    font-family: var(--unbounded);\r\n}"],sourceRoot:""}]);const i=s},63:(n,t,e)=>{e.d(t,{Z:()=>i});var r=e(537),o=e.n(r),a=e(645),s=e.n(a)()(o());s.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Unbounded&display=swap);"]),s.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap);"]),s.push([n.id,":root {\r\n    --light: #FFFFFF;\r\n    --dark: #0d1321;\r\n    --grey: #D2D7DF;\r\n    --unbounded: 'Unbounded', cursive;\r\n    --roboto: 'Roboto', sans-serif;\r\n}\r\n\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    /*border: 1px solid red;*/\r\n}\r\n\r\nheader {\r\n    height: 10vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: var(--dark);\r\n}\r\n\r\n.main-container {\r\n    display: flex;\r\n}\r\n\r\nnav {\r\n    flex: 2;\r\n    height: 90vh;\r\n    overflow-y: auto;\r\n}\r\n\r\nmain {\r\n    flex: 8;\r\n    height: 90vh;\r\n}","",{version:3,sources:["webpack://./src/styles/mainLayout.css"],names:[],mappings:"AAEA;IACI,gBAAgB;IAChB,eAAe;IACf,eAAe;IACf,iCAAiC;IACjC,8BAA8B;AAClC;;AAEA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;IACtB,yBAAyB;AAC7B;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,6BAA6B;AACjC;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,OAAO;IACP,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,OAAO;IACP,YAAY;AAChB",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Unbounded&display=swap');\r\n@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');\r\n:root {\r\n    --light: #FFFFFF;\r\n    --dark: #0d1321;\r\n    --grey: #D2D7DF;\r\n    --unbounded: 'Unbounded', cursive;\r\n    --roboto: 'Roboto', sans-serif;\r\n}\r\n\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    /*border: 1px solid red;*/\r\n}\r\n\r\nheader {\r\n    height: 10vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: var(--dark);\r\n}\r\n\r\n.main-container {\r\n    display: flex;\r\n}\r\n\r\nnav {\r\n    flex: 2;\r\n    height: 90vh;\r\n    overflow-y: auto;\r\n}\r\n\r\nmain {\r\n    flex: 8;\r\n    height: 90vh;\r\n}"],sourceRoot:""}]);const i=s},926:(n,t,e)=>{e.d(t,{Z:()=>i});var r=e(537),o=e.n(r),a=e(645),s=e.n(a)()(o());s.push([n.id,"nav {\r\n    font-family: var(--roboto);\r\n    background-color: var(--dark);\r\n    color: var(--light);\r\n    padding-left: 8px;\r\n    padding-right: 8px;\r\n}\r\n\r\nnav ul {\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n}\r\n\r\nnav li button {\r\n    color: var(--light);\r\n    background-color: var(--dark);\r\n    padding: 2px;\r\n    border-radius: 8px;\r\n    border: transparent;\r\n    font-size: larger;\r\n    margin-top: 4px;\r\n    margin-bottom: 4px;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n}\r\n\r\nnav li button:hover {\r\n    color: var(--dark);\r\n    background-color: var(--light);\r\n    transition: 0.3s;\r\n}\r\n\r\nnav span {\r\n    font-size: xx-large;\r\n    font-weight: 700;\r\n}\r\n\r\n#add-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 6px;\r\n}\r\n\r\n#add {\r\n    color: var(--dark);\r\n    background-color: var(--light);\r\n    font-weight: 700;\r\n}\r\n\r\n.icon {\r\n    height: 26.4px;\r\n    width: 26.4px;\r\n    filter: invert(100%) sepia(99%) saturate(119%) hue-rotate(196deg) brightness(116%) contrast(100%);\r\n}\r\n\r\n.badger {\r\n    display: inline;\r\n    background-color: var(--light);\r\n    padding: 1px;\r\n    color: var(--dark);\r\n    border-radius: 2px;\r\n}","",{version:3,sources:["webpack://./src/styles/nav.css"],names:[],mappings:"AAAA;IACI,0BAA0B;IAC1B,6BAA6B;IAC7B,mBAAmB;IACnB,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;IAChB,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;IACnB,6BAA6B;IAC7B,YAAY;IACZ,kBAAkB;IAClB,mBAAmB;IACnB,iBAAiB;IACjB,eAAe;IACf,kBAAkB;IAClB,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,8BAA8B;IAC9B,gBAAgB;AACpB;;AAEA;IACI,mBAAmB;IACnB,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,8BAA8B;IAC9B,gBAAgB;AACpB;;AAEA;IACI,cAAc;IACd,aAAa;IACb,iGAAiG;AACrG;;AAEA;IACI,eAAe;IACf,8BAA8B;IAC9B,YAAY;IACZ,kBAAkB;IAClB,kBAAkB;AACtB",sourcesContent:["nav {\r\n    font-family: var(--roboto);\r\n    background-color: var(--dark);\r\n    color: var(--light);\r\n    padding-left: 8px;\r\n    padding-right: 8px;\r\n}\r\n\r\nnav ul {\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n}\r\n\r\nnav li button {\r\n    color: var(--light);\r\n    background-color: var(--dark);\r\n    padding: 2px;\r\n    border-radius: 8px;\r\n    border: transparent;\r\n    font-size: larger;\r\n    margin-top: 4px;\r\n    margin-bottom: 4px;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n}\r\n\r\nnav li button:hover {\r\n    color: var(--dark);\r\n    background-color: var(--light);\r\n    transition: 0.3s;\r\n}\r\n\r\nnav span {\r\n    font-size: xx-large;\r\n    font-weight: 700;\r\n}\r\n\r\n#add-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 6px;\r\n}\r\n\r\n#add {\r\n    color: var(--dark);\r\n    background-color: var(--light);\r\n    font-weight: 700;\r\n}\r\n\r\n.icon {\r\n    height: 26.4px;\r\n    width: 26.4px;\r\n    filter: invert(100%) sepia(99%) saturate(119%) hue-rotate(196deg) brightness(116%) contrast(100%);\r\n}\r\n\r\n.badger {\r\n    display: inline;\r\n    background-color: var(--light);\r\n    padding: 1px;\r\n    color: var(--dark);\r\n    border-radius: 2px;\r\n}"],sourceRoot:""}]);const i=s},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",r=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),r&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),r&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var s={};if(r)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(s[c]=!0)}for(var l=0;l<n.length;l++){var d=[].concat(n[l]);r&&s[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),e&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=e):d[2]=e),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),t.push(d))}},t}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),s=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[t].concat(s).concat([a]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,r=0;r<t.length;r++)if(t[r].identifier===n){e=r;break}return e}function r(n,r){for(var a={},s=[],i=0;i<n.length;i++){var c=n[i],l=r.base?c[0]+r.base:c[0],d=a[l]||0,u="".concat(l," ").concat(d);a[l]=d+1;var A=e(u),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==A)t[A].references++,t[A].updater(p);else{var g=o(p,r);r.byIndex=i,t.splice(i,0,{identifier:u,updater:g,references:1})}s.push(u)}return s}function o(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var s=0;s<a.length;s++){var i=e(a[s]);t[i].references--}for(var c=r(n,o),l=0;l<a.length;l++){var d=e(a[l]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}a=c}}},569:n=>{var t={};n.exports=function(n,e){var r=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var r="";e.supports&&(r+="@supports (".concat(e.supports,") {")),e.media&&(r+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(r+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),r+=e.css,o&&(r+="}"),e.media&&(r+="}"),e.supports&&(r+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={id:r,exports:{}};return n[r](a,a.exports,e),a.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var r in t)e.o(t,r)&&!e.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:t[r]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var t=e.g.document;if(!n&&t&&(t.currentScript&&(n=t.currentScript.src),!n)){var r=t.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),e.nc=void 0,(()=>{var n=e(379),t=e.n(n),r=e(795),o=e.n(r),a=e(569),s=e.n(a),i=e(565),c=e.n(i),l=e(216),d=e.n(l),u=e(589),A=e.n(u),p=e(63),g={};g.styleTagTransform=A(),g.setAttributes=c(),g.insert=s().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=d(),t()(p.Z,g),p.Z&&p.Z.locals&&p.Z.locals;var h=e(497),m={};m.styleTagTransform=A(),m.setAttributes=c(),m.insert=s().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=d(),t()(h.Z,m),h.Z&&h.Z.locals&&h.Z.locals;var f=e(926),v={};v.styleTagTransform=A(),v.setAttributes=c(),v.insert=s().bind(null,"head"),v.domAPI=o(),v.insertStyleElement=d(),t()(f.Z,v),f.Z&&f.Z.locals&&f.Z.locals;const b=e.p+"6e93938839cb814ff0a3.svg",B=e.p+"2662cd22342b7aec3759.svg",I=e.p+"b7fbf4b82de02c03c144.svg",C=e.p+"0f8eae15be24f4e845ee.svg",y=e.p+"3270f2c93c8c138fa6cc.svg",k=e.p+"5b4bbee2e91b8855115c.svg";class x{constructor(n=[]){this.projects=n}getProjects(){return this.projects}addProject(n){this.projects.push(n)}deleteProject(n){this.projects.splice(this.projects.indexOf(n),1)}editProject(n){let t=prompt("Choose a new name for your project:");this.projects[this.projects.indexOf(n)].setName(t)}}class j{constructor(n,t=[]){this.name=n,this.tasks=t}addTask(n){this.tasks.push(n)}deleteTask(n){this.tasks.splice(this.tasks.indexOf(n),1)}setName(n){this.name=n}getName(){return this.name}getSize(){return this.tasks.length}getTasks(){return this.tasks}setTasks(n){this.tasks=n}}class T{constructor(n,t,e="0000-00-00",r=!1){this.name=n,this.description=t,this.date=e,this.isCompleted=r}setName(n){this.name=n}setDescription(n){this.description=n}setDate(n){this.date=n}setIsCompleted(n){this.isCompleted=n}getName(){return this.name}getDescription(){return this.description}getDate(){return this.date}getIsCompleted(){return this.isCompleted}}document.querySelector("body").innerHTML='\n    <header></header>\n    <div class="main-container">\n        <nav></nav>\n        <main></main>\n    </div>\n    ',document.querySelector("header").innerHTML='\n    <h1 class="header-title">✔️DoingIt</h1>\n    ',document.querySelector("nav").innerHTML=`\n    <ul>\n        <li><img class="icon" src="${b}" alt="All Icon"><button>All</button></li>\n        <li><img class="icon" src="${B}" alt="Today Icon"><button>Today</button></li>\n        <li><img class="icon" src="${I}" alt="This week Icon"><button>This Week</button></li>\n    </ul>\n    <span>Projects</span>\n    <ul id="projects-list">\n    </ul>\n    <ul>\n        <li id="add-container"><button id="add">Add Project</button></li>\n    </ul>\n    `,function(){const n=new x;document.querySelector("#add").addEventListener("click",(()=>{let r=prompt("Name your new project");if(null!=r&&""!=r){let o=new j(r);n.addProject(o),e(t,n.getProjects())}}));const t=document.querySelector("#projects-list");function e(a,s){let i="";for(let n=0;n<s.length;n++)i+=`<li><img class="icon" src="${C}" alt="Project Icon"><button id="open-btn-${n}">${s[n].getName()}</button>&nbsp<div class="badger">${s[n].getSize()}</div>\n            <button id="edt-btn-${n}"><img class="icon" src="${k}" alt="Edit Icon"></button><button id="del-btn-${n}"><img class="icon" src="${y}" alt="Delete Icon"</button>\n            </li>`;a.innerHTML=i,function(a){for(let s=0;s<a.length;s++)document.getElementById(`del-btn-${s}`).onclick=()=>{n.deleteProject(a[s]),e(t,n.getProjects())},document.getElementById(`edt-btn-${s}`).onclick=()=>{n.editProject(a[s]),e(t,n.getProjects())},document.getElementById(`open-btn-${s}`).onclick=()=>{o(r,n.getProjects()[s])}}(s)}const r=document.querySelector("body > div > main");function o(s,i){let c="<ul>";for(let n=0;n<i.getTasks().length;n++)c+=`<li><span>${i.getTasks()[n].getName()}</span><button id="edt-name-${n}"><img class="icon" src="${k}" alt="Edit Icon"></button>\n            <span>${i.getTasks()[n].getDescription()}</span><button id="edt-desc-${n}"><img class="icon" src="${k}" alt="Edit Icon"></button>\n            <input id="date-${n}" type="date" value="${i.getTasks()[n].getDate()}"><input id="check-${n}" type="checkbox" `,i.getTasks()[n].getIsCompleted()&&(c+="checked"),c+=i!=a?`><button id="del-${n}"><img class="icon" src="${y}" alt="Delete Icon"></button></li>`:"></li>";i!=a&&(c+='</ul><button id="add-task">Add Task</button>'),s.innerHTML=c,function(s){for(let i=0;i<s.getTasks().length;i++)document.getElementById(`edt-name-${i}`).onclick=()=>{let n=prompt("Choose a new name:");null!=n&&""!=n&&(s.getTasks()[i].setName(n),o(r,s))},document.getElementById(`edt-desc-${i}`).onclick=()=>{let n=prompt("Choose a new description:");""==n&&(n="No description..."),null==n||(s.getTasks()[i].setDescription(n),o(r,s))},document.getElementById(`date-${i}`).onchange=()=>{let n=document.getElementById(`date-${i}`).value;s.getTasks()[i].setDate(n)},document.getElementById(`check-${i}`).onclick=()=>{let n=document.getElementById(`check-${i}`).checked;s.getTasks()[i].setIsCompleted(n)},s!=a&&(document.getElementById(`del-${i}`).onclick=()=>{let a=s.getTasks()[i];s.deleteTask(a),o(r,s),e(t,n.getProjects())})}(i),i!=a&&function(a,s){a.onclick=()=>{let a=prompt("Choose your task name"),i=prompt("Choose your task description");if(null!=i&&""!=i||(i="No description..."),null!=a&&""!=a){let c=new T(a,i);s.addTask(c),o(r,s),e(t,n.getProjects())}}}(document.querySelector("#add-task"),i)}let a=new j("All");function s(){let t=[];for(let e=0;e<n.getProjects().length;e++)for(let r=0;r<n.getProjects()[e].getTasks().length;r++)t.push(n.getProjects()[e].getTasks()[r]);a.setTasks(t)}s(),o(r,a),document.querySelector("body > div > nav > ul:nth-child(1) > li:nth-child(1) > button").onclick=()=>{s(),o(r,a)},document.querySelector("body > div > nav > ul:nth-child(1) > li:nth-child(2) > button").onclick=()=>{!function(){let t=new Date,e=`${t.getFullYear()}-${t.getMonth()+1}-${t.getDate()}`,r=[];for(let t=0;t<n.getProjects().length;t++)for(let o=0;o<n.getProjects()[t].getTasks().length;o++)n.getProjects()[t].getTasks()[o].getDate()==e&&r.push(n.getProjects()[t].getTasks()[o]);a.setTasks(r)}(),o(r,a)}}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,