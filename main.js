(()=>{"use strict";var r={497:(r,n,t)=>{t.d(n,{Z:()=>i});var e=t(537),o=t.n(e),a=t(645),s=t.n(a)()(o());s.push([r.id,".header-title {\r\n    color: var(--light);\r\n    font-family: var(--unbounded);\r\n}","",{version:3,sources:["webpack://./src/styles/header.css"],names:[],mappings:"AAAA;IACI,mBAAmB;IACnB,6BAA6B;AACjC",sourcesContent:[".header-title {\r\n    color: var(--light);\r\n    font-family: var(--unbounded);\r\n}"],sourceRoot:""}]);const i=s},63:(r,n,t)=>{t.d(n,{Z:()=>i});var e=t(537),o=t.n(e),a=t(645),s=t.n(a)()(o());s.push([r.id,"@import url(https://fonts.googleapis.com/css2?family=Unbounded&display=swap);"]),s.push([r.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap);"]),s.push([r.id,":root {\r\n    --light: #FFFFFF;\r\n    --dark: #0d1321;\r\n    --grey: #D2D7DF;\r\n    --unbounded: 'Unbounded', cursive;\r\n    --roboto: 'Roboto', sans-serif;\r\n}\r\n\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    /*border: 1px solid red;*/\r\n}\r\n\r\nheader {\r\n    height: 10vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: var(--dark);\r\n}\r\n\r\n.main-container {\r\n    display: flex;\r\n}\r\n\r\nnav {\r\n    flex: 2;\r\n    height: 90vh;\r\n    overflow-y: auto;\r\n}\r\n\r\nmain {\r\n    flex: 8;\r\n    height: 90vh;\r\n    overflow-y: auto;\r\n}\r\n\r\n\r\n/*Scroll bar code from: https://www.cssportal.com/css-scrollbar-generator/ */\r\n\r\n\r\n/* Firefox */\r\n\r\n* {\r\n    scrollbar-width: thin;\r\n    scrollbar-color: #747474 #DFE9EB;\r\n}\r\n\r\n\r\n/* Chrome, Edge and Safari */\r\n\r\n*::-webkit-scrollbar {\r\n    width: 4px;\r\n    width: 4px;\r\n}\r\n\r\n*::-webkit-scrollbar-track {\r\n    border-radius: 5px;\r\n    background-color: #DFE9EB;\r\n}\r\n\r\n*::-webkit-scrollbar-track:hover {\r\n    background-color: #B8C0C2;\r\n}\r\n\r\n*::-webkit-scrollbar-track:active {\r\n    background-color: #B8C0C2;\r\n}\r\n\r\n*::-webkit-scrollbar-thumb {\r\n    border-radius: 5px;\r\n    background-color: #747474;\r\n}\r\n\r\n*::-webkit-scrollbar-thumb:hover {\r\n    background-color: #747474;\r\n}\r\n\r\n*::-webkit-scrollbar-thumb:active {\r\n    background-color: #000000;\r\n}","",{version:3,sources:["webpack://./src/styles/mainLayout.css"],names:[],mappings:"AAEA;IACI,gBAAgB;IAChB,eAAe;IACf,eAAe;IACf,iCAAiC;IACjC,8BAA8B;AAClC;;AAEA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;IACtB,yBAAyB;AAC7B;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,6BAA6B;AACjC;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,OAAO;IACP,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,OAAO;IACP,YAAY;IACZ,gBAAgB;AACpB;;;AAGA,4EAA4E;;;AAG5E,YAAY;;AAEZ;IACI,qBAAqB;IACrB,gCAAgC;AACpC;;;AAGA,4BAA4B;;AAE5B;IACI,UAAU;IACV,UAAU;AACd;;AAEA;IACI,kBAAkB;IAClB,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,kBAAkB;IAClB,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Unbounded&display=swap');\r\n@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');\r\n:root {\r\n    --light: #FFFFFF;\r\n    --dark: #0d1321;\r\n    --grey: #D2D7DF;\r\n    --unbounded: 'Unbounded', cursive;\r\n    --roboto: 'Roboto', sans-serif;\r\n}\r\n\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    /*border: 1px solid red;*/\r\n}\r\n\r\nheader {\r\n    height: 10vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: var(--dark);\r\n}\r\n\r\n.main-container {\r\n    display: flex;\r\n}\r\n\r\nnav {\r\n    flex: 2;\r\n    height: 90vh;\r\n    overflow-y: auto;\r\n}\r\n\r\nmain {\r\n    flex: 8;\r\n    height: 90vh;\r\n    overflow-y: auto;\r\n}\r\n\r\n\r\n/*Scroll bar code from: https://www.cssportal.com/css-scrollbar-generator/ */\r\n\r\n\r\n/* Firefox */\r\n\r\n* {\r\n    scrollbar-width: thin;\r\n    scrollbar-color: #747474 #DFE9EB;\r\n}\r\n\r\n\r\n/* Chrome, Edge and Safari */\r\n\r\n*::-webkit-scrollbar {\r\n    width: 4px;\r\n    width: 4px;\r\n}\r\n\r\n*::-webkit-scrollbar-track {\r\n    border-radius: 5px;\r\n    background-color: #DFE9EB;\r\n}\r\n\r\n*::-webkit-scrollbar-track:hover {\r\n    background-color: #B8C0C2;\r\n}\r\n\r\n*::-webkit-scrollbar-track:active {\r\n    background-color: #B8C0C2;\r\n}\r\n\r\n*::-webkit-scrollbar-thumb {\r\n    border-radius: 5px;\r\n    background-color: #747474;\r\n}\r\n\r\n*::-webkit-scrollbar-thumb:hover {\r\n    background-color: #747474;\r\n}\r\n\r\n*::-webkit-scrollbar-thumb:active {\r\n    background-color: #000000;\r\n}"],sourceRoot:""}]);const i=s},926:(r,n,t)=>{t.d(n,{Z:()=>i});var e=t(537),o=t.n(e),a=t(645),s=t.n(a)()(o());s.push([r.id,"nav {\r\n    font-family: var(--roboto);\r\n    background-color: var(--dark);\r\n    color: var(--light);\r\n    padding-left: 8px;\r\n    padding-right: 8px;\r\n}\r\n\r\nnav ul {\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n}\r\n\r\nnav li button {\r\n    color: var(--light);\r\n    background-color: var(--dark);\r\n    padding: 2px;\r\n    border-radius: 8px;\r\n    border: transparent;\r\n    font-size: larger;\r\n    margin-top: 4px;\r\n    margin-bottom: 4px;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n}\r\n\r\nnav li button:hover {\r\n    color: var(--dark);\r\n    background-color: var(--light);\r\n    transition: 0.3s;\r\n}\r\n\r\nnav span {\r\n    font-size: xx-large;\r\n    font-weight: 700;\r\n}\r\n\r\n#add-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 6px;\r\n}\r\n\r\n#add {\r\n    color: var(--dark);\r\n    background-color: var(--light);\r\n    font-weight: 700;\r\n}\r\n\r\n.icon {\r\n    height: 26.4px;\r\n    width: 26.4px;\r\n    filter: invert(100%) sepia(99%) saturate(119%) hue-rotate(196deg) brightness(116%) contrast(100%);\r\n}\r\n\r\n.badger {\r\n    display: inline;\r\n    background-color: var(--light);\r\n    padding: 1px;\r\n    color: var(--dark);\r\n    border-radius: 2px;\r\n}","",{version:3,sources:["webpack://./src/styles/nav.css"],names:[],mappings:"AAAA;IACI,0BAA0B;IAC1B,6BAA6B;IAC7B,mBAAmB;IACnB,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;IAChB,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;IACnB,6BAA6B;IAC7B,YAAY;IACZ,kBAAkB;IAClB,mBAAmB;IACnB,iBAAiB;IACjB,eAAe;IACf,kBAAkB;IAClB,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,8BAA8B;IAC9B,gBAAgB;AACpB;;AAEA;IACI,mBAAmB;IACnB,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,8BAA8B;IAC9B,gBAAgB;AACpB;;AAEA;IACI,cAAc;IACd,aAAa;IACb,iGAAiG;AACrG;;AAEA;IACI,eAAe;IACf,8BAA8B;IAC9B,YAAY;IACZ,kBAAkB;IAClB,kBAAkB;AACtB",sourcesContent:["nav {\r\n    font-family: var(--roboto);\r\n    background-color: var(--dark);\r\n    color: var(--light);\r\n    padding-left: 8px;\r\n    padding-right: 8px;\r\n}\r\n\r\nnav ul {\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n}\r\n\r\nnav li button {\r\n    color: var(--light);\r\n    background-color: var(--dark);\r\n    padding: 2px;\r\n    border-radius: 8px;\r\n    border: transparent;\r\n    font-size: larger;\r\n    margin-top: 4px;\r\n    margin-bottom: 4px;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n}\r\n\r\nnav li button:hover {\r\n    color: var(--dark);\r\n    background-color: var(--light);\r\n    transition: 0.3s;\r\n}\r\n\r\nnav span {\r\n    font-size: xx-large;\r\n    font-weight: 700;\r\n}\r\n\r\n#add-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 6px;\r\n}\r\n\r\n#add {\r\n    color: var(--dark);\r\n    background-color: var(--light);\r\n    font-weight: 700;\r\n}\r\n\r\n.icon {\r\n    height: 26.4px;\r\n    width: 26.4px;\r\n    filter: invert(100%) sepia(99%) saturate(119%) hue-rotate(196deg) brightness(116%) contrast(100%);\r\n}\r\n\r\n.badger {\r\n    display: inline;\r\n    background-color: var(--light);\r\n    padding: 1px;\r\n    color: var(--dark);\r\n    border-radius: 2px;\r\n}"],sourceRoot:""}]);const i=s},666:(r,n,t)=>{t.d(n,{Z:()=>i});var e=t(537),o=t.n(e),a=t(645),s=t.n(a)()(o());s.push([r.id,'main {\r\n    padding: 5%;\r\n}\r\n\r\nmain li {\r\n    margin-top: 12px;\r\n    display: grid;\r\n    column-gap: 10px;\r\n    grid-template-columns: 2fr 28px 6fr 28px 1fr 1fr 28px;\r\n    text-align: center;\r\n    font-family: var(--roboto);\r\n    background-color: rgb(241, 241, 241);\r\n    padding: 4px;\r\n    border-radius: 6px;\r\n    border-left: 4px solid var(--dark);\r\n    line-height: 30px;\r\n}\r\n\r\nmain li button {\r\n    background-color: transparent;\r\n    border: none;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n}\r\n\r\nmain img[alt="Delete Icon"] {\r\n    filter: invert(27%) sepia(50%) saturate(2918%) hue-rotate(344deg) brightness(83%) contrast(90%) !important;\r\n}\r\n\r\nmain input[type="date"] {\r\n    font-family: var(--roboto);\r\n    border: none;\r\n    border-radius: 8px;\r\n    font-size: small;\r\n}\r\n\r\nmain li button:hover {\r\n    background-color: rgb(210, 210, 210);\r\n    border-radius: 50%;\r\n    transition: 0.3s;\r\n}\r\n\r\nmain li input {\r\n    cursor: pointer;\r\n}\r\n\r\nmain li button img {\r\n    filter: brightness(0) !important;\r\n}\r\n\r\nmain span {\r\n    text-overflow: ellipsis;\r\n}\r\n\r\nmain>button {\r\n    margin-top: 12px;\r\n    display: block;\r\n    width: 100%;\r\n    text-align: center;\r\n    background-color: var(--dark);\r\n    color: var(--light);\r\n    font-family: var(--roboto);\r\n    padding: 3px;\r\n    border-radius: 8px;\r\n    border: transparent;\r\n    cursor: pointer;\r\n    font-size: x-large;\r\n    transition: 0.3s;\r\n}\r\n\r\nmain>button:hover {\r\n    transition: 0.3s;\r\n    background-color: #4f5053;\r\n}',"",{version:3,sources:["webpack://./src/styles/tasks.css"],names:[],mappings:"AAAA;IACI,WAAW;AACf;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,gBAAgB;IAChB,qDAAqD;IACrD,kBAAkB;IAClB,0BAA0B;IAC1B,oCAAoC;IACpC,YAAY;IACZ,kBAAkB;IAClB,kCAAkC;IAClC,iBAAiB;AACrB;;AAEA;IACI,6BAA6B;IAC7B,YAAY;IACZ,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,0GAA0G;AAC9G;;AAEA;IACI,0BAA0B;IAC1B,YAAY;IACZ,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,oCAAoC;IACpC,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,gCAAgC;AACpC;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,gBAAgB;IAChB,cAAc;IACd,WAAW;IACX,kBAAkB;IAClB,6BAA6B;IAC7B,mBAAmB;IACnB,0BAA0B;IAC1B,YAAY;IACZ,kBAAkB;IAClB,mBAAmB;IACnB,eAAe;IACf,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,yBAAyB;AAC7B",sourcesContent:['main {\r\n    padding: 5%;\r\n}\r\n\r\nmain li {\r\n    margin-top: 12px;\r\n    display: grid;\r\n    column-gap: 10px;\r\n    grid-template-columns: 2fr 28px 6fr 28px 1fr 1fr 28px;\r\n    text-align: center;\r\n    font-family: var(--roboto);\r\n    background-color: rgb(241, 241, 241);\r\n    padding: 4px;\r\n    border-radius: 6px;\r\n    border-left: 4px solid var(--dark);\r\n    line-height: 30px;\r\n}\r\n\r\nmain li button {\r\n    background-color: transparent;\r\n    border: none;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n}\r\n\r\nmain img[alt="Delete Icon"] {\r\n    filter: invert(27%) sepia(50%) saturate(2918%) hue-rotate(344deg) brightness(83%) contrast(90%) !important;\r\n}\r\n\r\nmain input[type="date"] {\r\n    font-family: var(--roboto);\r\n    border: none;\r\n    border-radius: 8px;\r\n    font-size: small;\r\n}\r\n\r\nmain li button:hover {\r\n    background-color: rgb(210, 210, 210);\r\n    border-radius: 50%;\r\n    transition: 0.3s;\r\n}\r\n\r\nmain li input {\r\n    cursor: pointer;\r\n}\r\n\r\nmain li button img {\r\n    filter: brightness(0) !important;\r\n}\r\n\r\nmain span {\r\n    text-overflow: ellipsis;\r\n}\r\n\r\nmain>button {\r\n    margin-top: 12px;\r\n    display: block;\r\n    width: 100%;\r\n    text-align: center;\r\n    background-color: var(--dark);\r\n    color: var(--light);\r\n    font-family: var(--roboto);\r\n    padding: 3px;\r\n    border-radius: 8px;\r\n    border: transparent;\r\n    cursor: pointer;\r\n    font-size: x-large;\r\n    transition: 0.3s;\r\n}\r\n\r\nmain>button:hover {\r\n    transition: 0.3s;\r\n    background-color: #4f5053;\r\n}'],sourceRoot:""}]);const i=s},645:r=>{r.exports=function(r){var n=[];return n.toString=function(){return this.map((function(n){var t="",e=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),e&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=r(n),e&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(r,t,e,o,a){"string"==typeof r&&(r=[[null,r,void 0]]);var s={};if(e)for(var i=0;i<this.length;i++){var l=this[i][0];null!=l&&(s[l]=!0)}for(var c=0;c<r.length;c++){var A=[].concat(r[c]);e&&s[A[0]]||(void 0!==a&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=a),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),n.push(A))}},n}},537:r=>{r.exports=function(r){var n=r[1],t=r[3];if(!t)return n;if("function"==typeof btoa){var e=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(e),a="/*# ".concat(o," */"),s=t.sources.map((function(r){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(r," */")}));return[n].concat(s).concat([a]).join("\n")}return[n].join("\n")}},379:r=>{var n=[];function t(r){for(var t=-1,e=0;e<n.length;e++)if(n[e].identifier===r){t=e;break}return t}function e(r,e){for(var a={},s=[],i=0;i<r.length;i++){var l=r[i],c=e.base?l[0]+e.base:l[0],A=a[c]||0,d="".concat(c," ").concat(A);a[c]=A+1;var u=t(d),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var g=o(p,e);e.byIndex=i,n.splice(i,0,{identifier:d,updater:g,references:1})}s.push(d)}return s}function o(r,n){var t=n.domAPI(n);return t.update(r),function(n){if(n){if(n.css===r.css&&n.media===r.media&&n.sourceMap===r.sourceMap&&n.supports===r.supports&&n.layer===r.layer)return;t.update(r=n)}else t.remove()}}r.exports=function(r,o){var a=e(r=r||[],o=o||{});return function(r){r=r||[];for(var s=0;s<a.length;s++){var i=t(a[s]);n[i].references--}for(var l=e(r,o),c=0;c<a.length;c++){var A=t(a[c]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}a=l}}},569:r=>{var n={};r.exports=function(r,t){var e=function(r){if(void 0===n[r]){var t=document.querySelector(r);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(r){t=null}n[r]=t}return n[r]}(r);if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");e.appendChild(t)}},216:r=>{r.exports=function(r){var n=document.createElement("style");return r.setAttributes(n,r.attributes),r.insert(n,r.options),n}},565:(r,n,t)=>{r.exports=function(r){var n=t.nc;n&&r.setAttribute("nonce",n)}},795:r=>{r.exports=function(r){var n=r.insertStyleElement(r);return{update:function(t){!function(r,n,t){var e="";t.supports&&(e+="@supports (".concat(t.supports,") {")),t.media&&(e+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(e+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),e+=t.css,o&&(e+="}"),t.media&&(e+="}"),t.supports&&(e+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(e+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(e,r,n.options)}(n,r,t)},remove:function(){!function(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r)}(n)}}}},589:r=>{r.exports=function(r,n){if(n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}}},n={};function t(e){var o=n[e];if(void 0!==o)return o.exports;var a=n[e]={id:e,exports:{}};return r[e](a,a.exports,t),a.exports}t.n=r=>{var n=r&&r.__esModule?()=>r.default:()=>r;return t.d(n,{a:n}),n},t.d=(r,n)=>{for(var e in n)t.o(n,e)&&!t.o(r,e)&&Object.defineProperty(r,e,{enumerable:!0,get:n[e]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(r){if("object"==typeof window)return window}}(),t.o=(r,n)=>Object.prototype.hasOwnProperty.call(r,n),(()=>{var r;t.g.importScripts&&(r=t.g.location+"");var n=t.g.document;if(!r&&n&&(n.currentScript&&(r=n.currentScript.src),!r)){var e=n.getElementsByTagName("script");e.length&&(r=e[e.length-1].src)}if(!r)throw new Error("Automatic publicPath is not supported in this browser");r=r.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=r})(),t.nc=void 0,(()=>{var r=t(379),n=t.n(r),e=t(795),o=t.n(e),a=t(569),s=t.n(a),i=t(565),l=t.n(i),c=t(216),A=t.n(c),d=t(589),u=t.n(d),p=t(63),g={};g.styleTagTransform=u(),g.setAttributes=l(),g.insert=s().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=A(),n()(p.Z,g),p.Z&&p.Z.locals&&p.Z.locals;var m=t(497),b={};b.styleTagTransform=u(),b.setAttributes=l(),b.insert=s().bind(null,"head"),b.domAPI=o(),b.insertStyleElement=A(),n()(m.Z,b),m.Z&&m.Z.locals&&m.Z.locals;var h=t(926),B={};B.styleTagTransform=u(),B.setAttributes=l(),B.insert=s().bind(null,"head"),B.domAPI=o(),B.insertStyleElement=A(),n()(h.Z,B),h.Z&&h.Z.locals&&h.Z.locals;var f=t(666),C={};C.styleTagTransform=u(),C.setAttributes=l(),C.insert=s().bind(null,"head"),C.domAPI=o(),C.insertStyleElement=A(),n()(f.Z,C),f.Z&&f.Z.locals&&f.Z.locals;const I=t.p+"6e93938839cb814ff0a3.svg",k=t.p+"2662cd22342b7aec3759.svg",v=t.p+"b7fbf4b82de02c03c144.svg",y=t.p+"0f8eae15be24f4e845ee.svg",x=t.p+"3270f2c93c8c138fa6cc.svg",w=t.p+"5b4bbee2e91b8855115c.svg";class E{constructor(r=[]){this.projects=r}getProjects(){return this.projects}addProject(r){this.projects.push(r)}deleteProject(r){this.projects.splice(this.projects.indexOf(r),1)}editProject(r){let n=prompt("Choose a new name for your project:");null!=n&&""!=n&&this.projects[this.projects.indexOf(r)].setName(n)}}class j{constructor(r,n=[]){this.name=r,this.tasks=n}addTask(r){this.tasks.push(r)}deleteTask(r){this.tasks.splice(this.tasks.indexOf(r),1)}setName(r){this.name=r}getName(){return this.name}getSize(){return this.tasks.length}getTasks(){return this.tasks}setTasks(r){this.tasks=r}}class T{constructor(r,n,t="0000-00-00",e=!1){this.name=r,this.description=n,this.date=t,this.isCompleted=e}setName(r){this.name=r}setDescription(r){this.description=r}setDate(r){this.date=r}setIsCompleted(r){this.isCompleted=r}getName(){return this.name}getDescription(){return this.description}getDate(){return this.date}getIsCompleted(){return this.isCompleted}}document.querySelector("body").innerHTML='\n    <header></header>\n    <div class="main-container">\n        <nav></nav>\n        <main></main>\n    </div>\n    ',document.querySelector("header").innerHTML='\n    <h1 class="header-title">✔️DoingIt</h1>\n    ',document.querySelector("nav").innerHTML=`\n    <ul>\n        <li><img class="icon" src="${I}" alt="All Icon"><button>All</button></li>\n        <li><img class="icon" src="${k}" alt="Today Icon"><button>Today</button></li>\n        <li><img class="icon" src="${v}" alt="This week Icon"><button>Next 7 days</button></li>\n    </ul>\n    <span>Projects</span>\n    <ul id="projects-list">\n    </ul>\n    <ul>\n        <li id="add-container"><button id="add">Add Project</button></li>\n    </ul>\n    `,function(){let r,n=new E;null!=localStorage.getItem("handlerData")&&(r=JSON.parse(localStorage.getItem("handlerData")));for(let t=0;t<r.projects.length;t++){let e=r.projects[t].name,o=new j(e);n.addProject(o);for(let e=0;e<r.projects[t].tasks.length;e++){let o=r.projects[t].tasks[e].name,a=r.projects[t].tasks[e].description,s=r.projects[t].tasks[e].date,i=r.projects[t].tasks[e].isCompleted,l=new T(o,a,s,i);n.getProjects()[t].addTask(l)}}document.querySelector("#add").addEventListener("click",(()=>{let r=prompt("Name your new project");if(null!=r&&""!=r){let o=new j(r);n.addProject(o),e(t,n.getProjects()),console.log(n),localStorage.setItem("handlerData",JSON.stringify(n))}}));const t=document.querySelector("#projects-list");function e(r,s){let i="";for(let r=0;r<s.length;r++)i+=`<li><img class="icon" src="${y}" alt="Project Icon"><button id="open-btn-${r}">${s[r].getName()}</button>&nbsp<div class="badger">${s[r].getSize()}</div>\n            <button id="edt-btn-${r}"><img class="icon" src="${w}" alt="Edit Icon"></button><button id="del-btn-${r}"><img class="icon" src="${x}" alt="Delete Icon"</button>\n            </li>`;r.innerHTML=i,function(r){for(let s=0;s<r.length;s++)document.getElementById(`del-btn-${s}`).onclick=()=>{n.deleteProject(r[s]),e(t,n.getProjects()),localStorage.setItem("handlerData",JSON.stringify(n))},document.getElementById(`edt-btn-${s}`).onclick=()=>{n.editProject(r[s]),e(t,n.getProjects()),localStorage.setItem("handlerData",JSON.stringify(n))},document.getElementById(`open-btn-${s}`).onclick=()=>{a(o,n.getProjects()[s]),localStorage.setItem("handlerData",JSON.stringify(n))}}(s)}const o=document.querySelector("body > div > main");function a(r,i){let l="<ul>";for(let r=0;r<i.getTasks().length;r++)l+="<li",i.getTasks()[r].getIsCompleted()&&(l+=' style="text-decoration: line-through;"'),l+=`><span>${i.getTasks()[r].getName()}</span><button id="edt-name-${r}"><img class="icon" src="${w}" alt="Edit Icon"></button>\n            <span>${i.getTasks()[r].getDescription()}</span><button id="edt-desc-${r}"><img class="icon" src="${w}" alt="Edit Icon"></button>\n            <input id="date-${r}" type="date" value="${i.getTasks()[r].getDate()}"><input id="check-${r}" type="checkbox" `,i.getTasks()[r].getIsCompleted()&&(l+="checked"),l+=i!=s?`><button id="del-${r}"><img class="icon" src="${x}" alt="Delete Icon"></button></li>`:"></li>";i!=s&&(l+='</ul><button id="add-task">Add Task</button>'),r.innerHTML=l,function(r){for(let i=0;i<r.getTasks().length;i++)document.getElementById(`edt-name-${i}`).onclick=()=>{let t=prompt("Choose a new name:");null!=t&&""!=t&&(r.getTasks()[i].setName(t),a(o,r),localStorage.setItem("handlerData",JSON.stringify(n)))},document.getElementById(`edt-desc-${i}`).onclick=()=>{let t=prompt("Choose a new description:");""==t&&(t="No description..."),null==t||(r.getTasks()[i].setDescription(t),a(o,r),localStorage.setItem("handlerData",JSON.stringify(n)))},document.getElementById(`date-${i}`).onchange=()=>{let t=document.getElementById(`date-${i}`).value;r.getTasks()[i].setDate(t),localStorage.setItem("handlerData",JSON.stringify(n))},document.getElementById(`check-${i}`).onclick=()=>{let t=document.getElementById(`check-${i}`).checked;r.getTasks()[i].setIsCompleted(t),a(o,r),localStorage.setItem("handlerData",JSON.stringify(n))},r!=s&&(document.getElementById(`del-${i}`).onclick=()=>{let s=r.getTasks()[i];r.deleteTask(s),a(o,r),e(t,n.getProjects()),localStorage.setItem("handlerData",JSON.stringify(n))})}(i),i!=s&&function(r,s){r.onclick=()=>{let r=prompt("Choose your task name"),i=prompt("Choose your task description");if(null!=i&&""!=i||(i="No description..."),null!=r&&""!=r){let l=new T(r,i);s.addTask(l),a(o,s),e(t,n.getProjects()),localStorage.setItem("handlerData",JSON.stringify(n))}}}(document.querySelector("#add-task"),i)}let s=new j("All");function i(){let r=[];for(let t=0;t<n.getProjects().length;t++)for(let e=0;e<n.getProjects()[t].getTasks().length;e++)r.push(n.getProjects()[t].getTasks()[e]);s.setTasks(r)}i(),a(o,s),e(t,n.getProjects()),document.querySelector("body > div > nav > ul:nth-child(1) > li:nth-child(1) > button").onclick=()=>{i(),a(o,s)},document.querySelector("body > div > nav > ul:nth-child(1) > li:nth-child(2) > button").onclick=()=>{!function(){let r=new Date,t=`${r.getFullYear()}-${r.getMonth()+1}-${r.getDate()}`,e=[];for(let r=0;r<n.getProjects().length;r++)for(let o=0;o<n.getProjects()[r].getTasks().length;o++)n.getProjects()[r].getTasks()[o].getDate()==t&&e.push(n.getProjects()[r].getTasks()[o]);s.setTasks(e)}(),a(o,s)},document.querySelector("body > div > nav > ul:nth-child(1) > li:nth-child(3) > button").onclick=()=>{!function(){let r=Date.now(),t=r+6048e5,e=[];for(let o=0;o<n.getProjects().length;o++)for(let a=0;a<n.getProjects()[o].getTasks().length;a++){let s=new Date(n.getProjects()[o].getTasks()[a].getDate());s=s.getTime(),s>r&&s<t&&e.push(n.getProjects()[o].getTasks()[a])}s.setTasks(e)}(),a(o,s)}}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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OEosSUFDM0RMLEVBQVc3QixjQUFjMUgsR0FBRzBJLFdBQVdrQixHQUFHUixXQUFhb0MsR0FDdkRHLEVBQVcxTSxLQUFLc0ssRUFBVzdCLGNBQWMxSCxHQUFHMEksV0FBV2tCLElBSW5FZ0IsRUFBZ0JqQyxTQUFTZ0QsRUFDN0IsQ0FJSUMsR0FDQW5CLEVBQXFCQyxFQUFNRSxFQUFnQixFQXFCMUJsSCxTQUFTQyxjQUFjLGlFQUMvQjZHLFFBQVUsTUFuQnZCLFdBQ0ksSUFBSXFCLEVBQVVOLEtBQUtPLE1BQ2ZDLEVBQWVGLEVBQVUsT0FHekJHLEVBQVksR0FDaEIsSUFBSyxJQUFJaE0sRUFBSSxFQUFHQSxFQUFJdUosRUFBVzdCLGNBQWM1SCxPQUFRRSxJQUNqRCxJQUFLLElBQUk0SixFQUFJLEVBQUdBLEVBQUlMLEVBQVc3QixjQUFjMUgsR0FBRzBJLFdBQVc1SSxPQUFROEosSUFBSyxDQUNwRSxJQUFJZCxFQUFPLElBQUl5QyxLQUFLaEMsRUFBVzdCLGNBQWMxSCxHQUFHMEksV0FBV2tCLEdBQUdSLFdBQzlETixFQUFPQSxFQUFLbUQsVUFDUm5ELEVBQU8rQyxHQUFXL0MsRUFBT2lELEdBQ3pCQyxFQUFVL00sS0FBS3NLLEVBQVc3QixjQUFjMUgsR0FBRzBJLFdBQVdrQixHQUU5RCxDQUVKZ0IsRUFBZ0JqQyxTQUFTcUQsRUFDN0IsQ0FJSUUsR0FDQXpCLEVBQXFCQyxFQUFNRSxFQUFnQixDQUVuRCxDSTVQQUYsRSIsInNvdXJjZXMiOlsid2VicGFjazovL3RvcC10b2RvLWxpc3QvLi9zcmMvc3R5bGVzL2hlYWRlci5jc3MiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL3NyYy9zdHlsZXMvbWFpbkxheW91dC5jc3MiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL3NyYy9zdHlsZXMvbmF2LmNzcyIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vc3JjL3N0eWxlcy90YXNrcy5jc3MiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL3RvcC10b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3RvcC10b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3RvcC10b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3RvcC10b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vc3JjL3N0eWxlcy9tYWluTGF5b3V0LmNzcz9iY2NmIiwid2VicGFjazovL3RvcC10b2RvLWxpc3QvLi9zcmMvc3R5bGVzL2hlYWRlci5jc3M/ZTY4YiIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vc3JjL3N0eWxlcy9uYXYuY3NzPzIxNzAiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL3NyYy9zdHlsZXMvdGFza3MuY3NzPzRkMzIiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL3NyYy9sb2dpYy9BcHBIYW5kbGVyLmpzIiwid2VicGFjazovL3RvcC10b2RvLWxpc3QvLi9zcmMvbG9naWMvUHJvamVjdC5qcyIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vc3JjL2xvZ2ljL1Rhc2suanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL3NyYy9sb2dpYy9ET01NYW5pcHVsYXRpb24uanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL3NyYy9VSS9tYWluTGF5b3V0LmpzIiwid2VicGFjazovL3RvcC10b2RvLWxpc3QvLi9zcmMvVUkvaGVhZGVyLmpzIiwid2VicGFjazovL3RvcC10b2RvLWxpc3QvLi9zcmMvVUkvbmF2LmpzIiwid2VicGFjazovL3RvcC10b2RvLWxpc3QvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIuaGVhZGVyLXRpdGxlIHtcXHJcXG4gICAgY29sb3I6IHZhcigtLWxpZ2h0KTtcXHJcXG4gICAgZm9udC1mYW1pbHk6IHZhcigtLXVuYm91bmRlZCk7XFxyXFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvaGVhZGVyLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLG1CQUFtQjtJQUNuQiw2QkFBNkI7QUFDakNcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmhlYWRlci10aXRsZSB7XFxyXFxuICAgIGNvbG9yOiB2YXIoLS1saWdodCk7XFxyXFxuICAgIGZvbnQtZmFtaWx5OiB2YXIoLS11bmJvdW5kZWQpO1xcclxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1VbmJvdW5kZWQmZGlzcGxheT1zd2FwKTtcIl0pO1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIkBpbXBvcnQgdXJsKGh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9Um9ib3RvOndnaHRANDAwOzcwMCZkaXNwbGF5PXN3YXApO1wiXSk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCI6cm9vdCB7XFxyXFxuICAgIC0tbGlnaHQ6ICNGRkZGRkY7XFxyXFxuICAgIC0tZGFyazogIzBkMTMyMTtcXHJcXG4gICAgLS1ncmV5OiAjRDJEN0RGO1xcclxcbiAgICAtLXVuYm91bmRlZDogJ1VuYm91bmRlZCcsIGN1cnNpdmU7XFxyXFxuICAgIC0tcm9ib3RvOiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcXHJcXG59XFxyXFxuXFxyXFxuKiB7XFxyXFxuICAgIG1hcmdpbjogMDtcXHJcXG4gICAgcGFkZGluZzogMDtcXHJcXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXHJcXG4gICAgLypib3JkZXI6IDFweCBzb2xpZCByZWQ7Ki9cXHJcXG59XFxyXFxuXFxyXFxuaGVhZGVyIHtcXHJcXG4gICAgaGVpZ2h0OiAxMHZoO1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZGFyayk7XFxyXFxufVxcclxcblxcclxcbi5tYWluLWNvbnRhaW5lciB7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxufVxcclxcblxcclxcbm5hdiB7XFxyXFxuICAgIGZsZXg6IDI7XFxyXFxuICAgIGhlaWdodDogOTB2aDtcXHJcXG4gICAgb3ZlcmZsb3cteTogYXV0bztcXHJcXG59XFxyXFxuXFxyXFxubWFpbiB7XFxyXFxuICAgIGZsZXg6IDg7XFxyXFxuICAgIGhlaWdodDogOTB2aDtcXHJcXG4gICAgb3ZlcmZsb3cteTogYXV0bztcXHJcXG59XFxyXFxuXFxyXFxuXFxyXFxuLypTY3JvbGwgYmFyIGNvZGUgZnJvbTogaHR0cHM6Ly93d3cuY3NzcG9ydGFsLmNvbS9jc3Mtc2Nyb2xsYmFyLWdlbmVyYXRvci8gKi9cXHJcXG5cXHJcXG5cXHJcXG4vKiBGaXJlZm94ICovXFxyXFxuXFxyXFxuKiB7XFxyXFxuICAgIHNjcm9sbGJhci13aWR0aDogdGhpbjtcXHJcXG4gICAgc2Nyb2xsYmFyLWNvbG9yOiAjNzQ3NDc0ICNERkU5RUI7XFxyXFxufVxcclxcblxcclxcblxcclxcbi8qIENocm9tZSwgRWRnZSBhbmQgU2FmYXJpICovXFxyXFxuXFxyXFxuKjo6LXdlYmtpdC1zY3JvbGxiYXIge1xcclxcbiAgICB3aWR0aDogNHB4O1xcclxcbiAgICB3aWR0aDogNHB4O1xcclxcbn1cXHJcXG5cXHJcXG4qOjotd2Via2l0LXNjcm9sbGJhci10cmFjayB7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0RGRTlFQjtcXHJcXG59XFxyXFxuXFxyXFxuKjo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2s6aG92ZXIge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQjhDMEMyO1xcclxcbn1cXHJcXG5cXHJcXG4qOjotd2Via2l0LXNjcm9sbGJhci10cmFjazphY3RpdmUge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQjhDMEMyO1xcclxcbn1cXHJcXG5cXHJcXG4qOjotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzc0NzQ3NDtcXHJcXG59XFxyXFxuXFxyXFxuKjo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWI6aG92ZXIge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNzQ3NDc0O1xcclxcbn1cXHJcXG5cXHJcXG4qOjotd2Via2l0LXNjcm9sbGJhci10aHVtYjphY3RpdmUge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwMDAwO1xcclxcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGVzL21haW5MYXlvdXQuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGVBQWU7SUFDZixlQUFlO0lBQ2YsaUNBQWlDO0lBQ2pDLDhCQUE4QjtBQUNsQzs7QUFFQTtJQUNJLFNBQVM7SUFDVCxVQUFVO0lBQ1Ysc0JBQXNCO0lBQ3RCLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLFlBQVk7SUFDWixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLHVCQUF1QjtJQUN2Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksT0FBTztJQUNQLFlBQVk7SUFDWixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxPQUFPO0lBQ1AsWUFBWTtJQUNaLGdCQUFnQjtBQUNwQjs7O0FBR0EsNEVBQTRFOzs7QUFHNUUsWUFBWTs7QUFFWjtJQUNJLHFCQUFxQjtJQUNyQixnQ0FBZ0M7QUFDcEM7OztBQUdBLDRCQUE0Qjs7QUFFNUI7SUFDSSxVQUFVO0lBQ1YsVUFBVTtBQUNkOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQix5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSx5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSx5QkFBeUI7QUFDN0JcIixcInNvdXJjZXNDb250ZW50XCI6W1wiQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9VW5ib3VuZGVkJmRpc3BsYXk9c3dhcCcpO1xcclxcbkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PVJvYm90bzp3Z2h0QDQwMDs3MDAmZGlzcGxheT1zd2FwJyk7XFxyXFxuOnJvb3Qge1xcclxcbiAgICAtLWxpZ2h0OiAjRkZGRkZGO1xcclxcbiAgICAtLWRhcms6ICMwZDEzMjE7XFxyXFxuICAgIC0tZ3JleTogI0QyRDdERjtcXHJcXG4gICAgLS11bmJvdW5kZWQ6ICdVbmJvdW5kZWQnLCBjdXJzaXZlO1xcclxcbiAgICAtLXJvYm90bzogJ1JvYm90bycsIHNhbnMtc2VyaWY7XFxyXFxufVxcclxcblxcclxcbioge1xcclxcbiAgICBtYXJnaW46IDA7XFxyXFxuICAgIHBhZGRpbmc6IDA7XFxyXFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxyXFxuICAgIC8qYm9yZGVyOiAxcHggc29saWQgcmVkOyovXFxyXFxufVxcclxcblxcclxcbmhlYWRlciB7XFxyXFxuICAgIGhlaWdodDogMTB2aDtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWRhcmspO1xcclxcbn1cXHJcXG5cXHJcXG4ubWFpbi1jb250YWluZXIge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbn1cXHJcXG5cXHJcXG5uYXYge1xcclxcbiAgICBmbGV4OiAyO1xcclxcbiAgICBoZWlnaHQ6IDkwdmg7XFxyXFxuICAgIG92ZXJmbG93LXk6IGF1dG87XFxyXFxufVxcclxcblxcclxcbm1haW4ge1xcclxcbiAgICBmbGV4OiA4O1xcclxcbiAgICBoZWlnaHQ6IDkwdmg7XFxyXFxuICAgIG92ZXJmbG93LXk6IGF1dG87XFxyXFxufVxcclxcblxcclxcblxcclxcbi8qU2Nyb2xsIGJhciBjb2RlIGZyb206IGh0dHBzOi8vd3d3LmNzc3BvcnRhbC5jb20vY3NzLXNjcm9sbGJhci1nZW5lcmF0b3IvICovXFxyXFxuXFxyXFxuXFxyXFxuLyogRmlyZWZveCAqL1xcclxcblxcclxcbioge1xcclxcbiAgICBzY3JvbGxiYXItd2lkdGg6IHRoaW47XFxyXFxuICAgIHNjcm9sbGJhci1jb2xvcjogIzc0NzQ3NCAjREZFOUVCO1xcclxcbn1cXHJcXG5cXHJcXG5cXHJcXG4vKiBDaHJvbWUsIEVkZ2UgYW5kIFNhZmFyaSAqL1xcclxcblxcclxcbio6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcXHJcXG4gICAgd2lkdGg6IDRweDtcXHJcXG4gICAgd2lkdGg6IDRweDtcXHJcXG59XFxyXFxuXFxyXFxuKjo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2sge1xcclxcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNERkU5RUI7XFxyXFxufVxcclxcblxcclxcbio6Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNrOmhvdmVyIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0I4QzBDMjtcXHJcXG59XFxyXFxuXFxyXFxuKjo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2s6YWN0aXZlIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0I4QzBDMjtcXHJcXG59XFxyXFxuXFxyXFxuKjo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIge1xcclxcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICM3NDc0NzQ7XFxyXFxufVxcclxcblxcclxcbio6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iOmhvdmVyIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzc0NzQ3NDtcXHJcXG59XFxyXFxuXFxyXFxuKjo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWI6YWN0aXZlIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDAwMDtcXHJcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwibmF2IHtcXHJcXG4gICAgZm9udC1mYW1pbHk6IHZhcigtLXJvYm90byk7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWRhcmspO1xcclxcbiAgICBjb2xvcjogdmFyKC0tbGlnaHQpO1xcclxcbiAgICBwYWRkaW5nLWxlZnQ6IDhweDtcXHJcXG4gICAgcGFkZGluZy1yaWdodDogOHB4O1xcclxcbn1cXHJcXG5cXHJcXG5uYXYgdWwge1xcclxcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xcclxcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xcclxcbn1cXHJcXG5cXHJcXG5uYXYgbGkgYnV0dG9uIHtcXHJcXG4gICAgY29sb3I6IHZhcigtLWxpZ2h0KTtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZGFyayk7XFxyXFxuICAgIHBhZGRpbmc6IDJweDtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xcclxcbiAgICBib3JkZXI6IHRyYW5zcGFyZW50O1xcclxcbiAgICBmb250LXNpemU6IGxhcmdlcjtcXHJcXG4gICAgbWFyZ2luLXRvcDogNHB4O1xcclxcbiAgICBtYXJnaW4tYm90dG9tOiA0cHg7XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gICAgdHJhbnNpdGlvbjogMC4zcztcXHJcXG59XFxyXFxuXFxyXFxubmF2IGxpIGJ1dHRvbjpob3ZlciB7XFxyXFxuICAgIGNvbG9yOiB2YXIoLS1kYXJrKTtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbGlnaHQpO1xcclxcbiAgICB0cmFuc2l0aW9uOiAwLjNzO1xcclxcbn1cXHJcXG5cXHJcXG5uYXYgc3BhbiB7XFxyXFxuICAgIGZvbnQtc2l6ZTogeHgtbGFyZ2U7XFxyXFxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XFxyXFxufVxcclxcblxcclxcbiNhZGQtY29udGFpbmVyIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICAgIG1hcmdpbi10b3A6IDZweDtcXHJcXG59XFxyXFxuXFxyXFxuI2FkZCB7XFxyXFxuICAgIGNvbG9yOiB2YXIoLS1kYXJrKTtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbGlnaHQpO1xcclxcbiAgICBmb250LXdlaWdodDogNzAwO1xcclxcbn1cXHJcXG5cXHJcXG4uaWNvbiB7XFxyXFxuICAgIGhlaWdodDogMjYuNHB4O1xcclxcbiAgICB3aWR0aDogMjYuNHB4O1xcclxcbiAgICBmaWx0ZXI6IGludmVydCgxMDAlKSBzZXBpYSg5OSUpIHNhdHVyYXRlKDExOSUpIGh1ZS1yb3RhdGUoMTk2ZGVnKSBicmlnaHRuZXNzKDExNiUpIGNvbnRyYXN0KDEwMCUpO1xcclxcbn1cXHJcXG5cXHJcXG4uYmFkZ2VyIHtcXHJcXG4gICAgZGlzcGxheTogaW5saW5lO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1saWdodCk7XFxyXFxuICAgIHBhZGRpbmc6IDFweDtcXHJcXG4gICAgY29sb3I6IHZhcigtLWRhcmspO1xcclxcbiAgICBib3JkZXItcmFkaXVzOiAycHg7XFxyXFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvbmF2LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLDBCQUEwQjtJQUMxQiw2QkFBNkI7SUFDN0IsbUJBQW1CO0lBQ25CLGlCQUFpQjtJQUNqQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksbUJBQW1CO0lBQ25CLDZCQUE2QjtJQUM3QixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixpQkFBaUI7SUFDakIsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLDhCQUE4QjtJQUM5QixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxtQkFBbUI7SUFDbkIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixlQUFlO0FBQ25COztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLDhCQUE4QjtJQUM5QixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsYUFBYTtJQUNiLGlHQUFpRztBQUNyRzs7QUFFQTtJQUNJLGVBQWU7SUFDZiw4QkFBOEI7SUFDOUIsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixrQkFBa0I7QUFDdEJcIixcInNvdXJjZXNDb250ZW50XCI6W1wibmF2IHtcXHJcXG4gICAgZm9udC1mYW1pbHk6IHZhcigtLXJvYm90byk7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWRhcmspO1xcclxcbiAgICBjb2xvcjogdmFyKC0tbGlnaHQpO1xcclxcbiAgICBwYWRkaW5nLWxlZnQ6IDhweDtcXHJcXG4gICAgcGFkZGluZy1yaWdodDogOHB4O1xcclxcbn1cXHJcXG5cXHJcXG5uYXYgdWwge1xcclxcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xcclxcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xcclxcbn1cXHJcXG5cXHJcXG5uYXYgbGkgYnV0dG9uIHtcXHJcXG4gICAgY29sb3I6IHZhcigtLWxpZ2h0KTtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZGFyayk7XFxyXFxuICAgIHBhZGRpbmc6IDJweDtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xcclxcbiAgICBib3JkZXI6IHRyYW5zcGFyZW50O1xcclxcbiAgICBmb250LXNpemU6IGxhcmdlcjtcXHJcXG4gICAgbWFyZ2luLXRvcDogNHB4O1xcclxcbiAgICBtYXJnaW4tYm90dG9tOiA0cHg7XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gICAgdHJhbnNpdGlvbjogMC4zcztcXHJcXG59XFxyXFxuXFxyXFxubmF2IGxpIGJ1dHRvbjpob3ZlciB7XFxyXFxuICAgIGNvbG9yOiB2YXIoLS1kYXJrKTtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbGlnaHQpO1xcclxcbiAgICB0cmFuc2l0aW9uOiAwLjNzO1xcclxcbn1cXHJcXG5cXHJcXG5uYXYgc3BhbiB7XFxyXFxuICAgIGZvbnQtc2l6ZTogeHgtbGFyZ2U7XFxyXFxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XFxyXFxufVxcclxcblxcclxcbiNhZGQtY29udGFpbmVyIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICAgIG1hcmdpbi10b3A6IDZweDtcXHJcXG59XFxyXFxuXFxyXFxuI2FkZCB7XFxyXFxuICAgIGNvbG9yOiB2YXIoLS1kYXJrKTtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbGlnaHQpO1xcclxcbiAgICBmb250LXdlaWdodDogNzAwO1xcclxcbn1cXHJcXG5cXHJcXG4uaWNvbiB7XFxyXFxuICAgIGhlaWdodDogMjYuNHB4O1xcclxcbiAgICB3aWR0aDogMjYuNHB4O1xcclxcbiAgICBmaWx0ZXI6IGludmVydCgxMDAlKSBzZXBpYSg5OSUpIHNhdHVyYXRlKDExOSUpIGh1ZS1yb3RhdGUoMTk2ZGVnKSBicmlnaHRuZXNzKDExNiUpIGNvbnRyYXN0KDEwMCUpO1xcclxcbn1cXHJcXG5cXHJcXG4uYmFkZ2VyIHtcXHJcXG4gICAgZGlzcGxheTogaW5saW5lO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1saWdodCk7XFxyXFxuICAgIHBhZGRpbmc6IDFweDtcXHJcXG4gICAgY29sb3I6IHZhcigtLWRhcmspO1xcclxcbiAgICBib3JkZXItcmFkaXVzOiAycHg7XFxyXFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIm1haW4ge1xcclxcbiAgICBwYWRkaW5nOiA1JTtcXHJcXG59XFxyXFxuXFxyXFxubWFpbiBsaSB7XFxyXFxuICAgIG1hcmdpbi10b3A6IDEycHg7XFxyXFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICAgIGNvbHVtbi1nYXA6IDEwcHg7XFxyXFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMmZyIDI4cHggNmZyIDI4cHggMWZyIDFmciAyOHB4O1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxuICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1yb2JvdG8pO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQxLCAyNDEsIDI0MSk7XFxyXFxuICAgIHBhZGRpbmc6IDRweDtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogNnB4O1xcclxcbiAgICBib3JkZXItbGVmdDogNHB4IHNvbGlkIHZhcigtLWRhcmspO1xcclxcbiAgICBsaW5lLWhlaWdodDogMzBweDtcXHJcXG59XFxyXFxuXFxyXFxubWFpbiBsaSBidXR0b24ge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXHJcXG4gICAgYm9yZGVyOiBub25lO1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICAgIHRyYW5zaXRpb246IDAuM3M7XFxyXFxufVxcclxcblxcclxcbm1haW4gaW1nW2FsdD1cXFwiRGVsZXRlIEljb25cXFwiXSB7XFxyXFxuICAgIGZpbHRlcjogaW52ZXJ0KDI3JSkgc2VwaWEoNTAlKSBzYXR1cmF0ZSgyOTE4JSkgaHVlLXJvdGF0ZSgzNDRkZWcpIGJyaWdodG5lc3MoODMlKSBjb250cmFzdCg5MCUpICFpbXBvcnRhbnQ7XFxyXFxufVxcclxcblxcclxcbm1haW4gaW5wdXRbdHlwZT1cXFwiZGF0ZVxcXCJdIHtcXHJcXG4gICAgZm9udC1mYW1pbHk6IHZhcigtLXJvYm90byk7XFxyXFxuICAgIGJvcmRlcjogbm9uZTtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xcclxcbiAgICBmb250LXNpemU6IHNtYWxsO1xcclxcbn1cXHJcXG5cXHJcXG5tYWluIGxpIGJ1dHRvbjpob3ZlciB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMTAsIDIxMCwgMjEwKTtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xcclxcbiAgICB0cmFuc2l0aW9uOiAwLjNzO1xcclxcbn1cXHJcXG5cXHJcXG5tYWluIGxpIGlucHV0IHtcXHJcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcclxcbn1cXHJcXG5cXHJcXG5tYWluIGxpIGJ1dHRvbiBpbWcge1xcclxcbiAgICBmaWx0ZXI6IGJyaWdodG5lc3MoMCkgIWltcG9ydGFudDtcXHJcXG59XFxyXFxuXFxyXFxubWFpbiBzcGFuIHtcXHJcXG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XFxyXFxufVxcclxcblxcclxcbm1haW4+YnV0dG9uIHtcXHJcXG4gICAgbWFyZ2luLXRvcDogMTJweDtcXHJcXG4gICAgZGlzcGxheTogYmxvY2s7XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWRhcmspO1xcclxcbiAgICBjb2xvcjogdmFyKC0tbGlnaHQpO1xcclxcbiAgICBmb250LWZhbWlseTogdmFyKC0tcm9ib3RvKTtcXHJcXG4gICAgcGFkZGluZzogM3B4O1xcclxcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XFxyXFxuICAgIGJvcmRlcjogdHJhbnNwYXJlbnQ7XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gICAgZm9udC1zaXplOiB4LWxhcmdlO1xcclxcbiAgICB0cmFuc2l0aW9uOiAwLjNzO1xcclxcbn1cXHJcXG5cXHJcXG5tYWluPmJ1dHRvbjpob3ZlciB7XFxyXFxuICAgIHRyYW5zaXRpb246IDAuM3M7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0ZjUwNTM7XFxyXFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvdGFza3MuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGFBQWE7SUFDYixnQkFBZ0I7SUFDaEIscURBQXFEO0lBQ3JELGtCQUFrQjtJQUNsQiwwQkFBMEI7SUFDMUIsb0NBQW9DO0lBQ3BDLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsa0NBQWtDO0lBQ2xDLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLDZCQUE2QjtJQUM3QixZQUFZO0lBQ1osZUFBZTtJQUNmLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLDBHQUEwRztBQUM5Rzs7QUFFQTtJQUNJLDBCQUEwQjtJQUMxQixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLG9DQUFvQztJQUNwQyxrQkFBa0I7SUFDbEIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGdDQUFnQztBQUNwQzs7QUFFQTtJQUNJLHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixjQUFjO0lBQ2QsV0FBVztJQUNYLGtCQUFrQjtJQUNsQiw2QkFBNkI7SUFDN0IsbUJBQW1CO0lBQ25CLDBCQUEwQjtJQUMxQixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQix5QkFBeUI7QUFDN0JcIixcInNvdXJjZXNDb250ZW50XCI6W1wibWFpbiB7XFxyXFxuICAgIHBhZGRpbmc6IDUlO1xcclxcbn1cXHJcXG5cXHJcXG5tYWluIGxpIHtcXHJcXG4gICAgbWFyZ2luLXRvcDogMTJweDtcXHJcXG4gICAgZGlzcGxheTogZ3JpZDtcXHJcXG4gICAgY29sdW1uLWdhcDogMTBweDtcXHJcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAyZnIgMjhweCA2ZnIgMjhweCAxZnIgMWZyIDI4cHg7XFxyXFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG4gICAgZm9udC1mYW1pbHk6IHZhcigtLXJvYm90byk7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyNDEsIDI0MSwgMjQxKTtcXHJcXG4gICAgcGFkZGluZzogNHB4O1xcclxcbiAgICBib3JkZXItcmFkaXVzOiA2cHg7XFxyXFxuICAgIGJvcmRlci1sZWZ0OiA0cHggc29saWQgdmFyKC0tZGFyayk7XFxyXFxuICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xcclxcbn1cXHJcXG5cXHJcXG5tYWluIGxpIGJ1dHRvbiB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcclxcbiAgICBib3JkZXI6IG5vbmU7XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gICAgdHJhbnNpdGlvbjogMC4zcztcXHJcXG59XFxyXFxuXFxyXFxubWFpbiBpbWdbYWx0PVxcXCJEZWxldGUgSWNvblxcXCJdIHtcXHJcXG4gICAgZmlsdGVyOiBpbnZlcnQoMjclKSBzZXBpYSg1MCUpIHNhdHVyYXRlKDI5MTglKSBodWUtcm90YXRlKDM0NGRlZykgYnJpZ2h0bmVzcyg4MyUpIGNvbnRyYXN0KDkwJSkgIWltcG9ydGFudDtcXHJcXG59XFxyXFxuXFxyXFxubWFpbiBpbnB1dFt0eXBlPVxcXCJkYXRlXFxcIl0ge1xcclxcbiAgICBmb250LWZhbWlseTogdmFyKC0tcm9ib3RvKTtcXHJcXG4gICAgYm9yZGVyOiBub25lO1xcclxcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XFxyXFxuICAgIGZvbnQtc2l6ZTogc21hbGw7XFxyXFxufVxcclxcblxcclxcbm1haW4gbGkgYnV0dG9uOmhvdmVyIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIxMCwgMjEwLCAyMTApO1xcclxcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XFxyXFxuICAgIHRyYW5zaXRpb246IDAuM3M7XFxyXFxufVxcclxcblxcclxcbm1haW4gbGkgaW5wdXQge1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxufVxcclxcblxcclxcbm1haW4gbGkgYnV0dG9uIGltZyB7XFxyXFxuICAgIGZpbHRlcjogYnJpZ2h0bmVzcygwKSAhaW1wb3J0YW50O1xcclxcbn1cXHJcXG5cXHJcXG5tYWluIHNwYW4ge1xcclxcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcXHJcXG59XFxyXFxuXFxyXFxubWFpbj5idXR0b24ge1xcclxcbiAgICBtYXJnaW4tdG9wOiAxMnB4O1xcclxcbiAgICBkaXNwbGF5OiBibG9jaztcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZGFyayk7XFxyXFxuICAgIGNvbG9yOiB2YXIoLS1saWdodCk7XFxyXFxuICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1yb2JvdG8pO1xcclxcbiAgICBwYWRkaW5nOiAzcHg7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcXHJcXG4gICAgYm9yZGVyOiB0cmFuc3BhcmVudDtcXHJcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcclxcbiAgICBmb250LXNpemU6IHgtbGFyZ2U7XFxyXFxuICAgIHRyYW5zaXRpb246IDAuM3M7XFxyXFxufVxcclxcblxcclxcbm1haW4+YnV0dG9uOmhvdmVyIHtcXHJcXG4gICAgdHJhbnNpdGlvbjogMC4zcztcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzRmNTA1MztcXHJcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcblxuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gdXBkYXRlcjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cblxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcblxuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cblxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuXG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cblxuICBjc3MgKz0gb2JqLmNzcztcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjXG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkgc2NyaXB0VXJsID0gc2NyaXB0c1tzY3JpcHRzLmxlbmd0aCAtIDFdLnNyY1xuXHR9XG59XG4vLyBXaGVuIHN1cHBvcnRpbmcgYnJvd3NlcnMgd2hlcmUgYW4gYXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCB5b3UgbXVzdCBzcGVjaWZ5IGFuIG91dHB1dC5wdWJsaWNQYXRoIG1hbnVhbGx5IHZpYSBjb25maWd1cmF0aW9uXG4vLyBvciBwYXNzIGFuIGVtcHR5IHN0cmluZyAoXCJcIikgYW5kIHNldCB0aGUgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gdmFyaWFibGUgZnJvbSB5b3VyIGNvZGUgdG8gdXNlIHlvdXIgb3duIGxvZ2ljLlxuaWYgKCFzY3JpcHRVcmwpIHRocm93IG5ldyBFcnJvcihcIkF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyXCIpO1xuc2NyaXB0VXJsID0gc2NyaXB0VXJsLnJlcGxhY2UoLyMuKiQvLCBcIlwiKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiL1wiKTtcbl9fd2VicGFja19yZXF1aXJlX18ucCA9IHNjcmlwdFVybDsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9tYWluTGF5b3V0LmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbWFpbkxheW91dC5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaGVhZGVyLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaGVhZGVyLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9uYXYuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9uYXYuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3Rhc2tzLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vdGFza3MuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiZXhwb3J0IGNsYXNzIEFwcEhhbmRsZXIge1xyXG4gICAgY29uc3RydWN0b3IocHJvamVjdHMgPSBbXSkge1xyXG4gICAgICAgIHRoaXMucHJvamVjdHMgPSBwcm9qZWN0cztcclxuICAgIH1cclxuICAgIGdldFByb2plY3RzKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnByb2plY3RzO1xyXG4gICAgfVxyXG4gICAgYWRkUHJvamVjdChwcm9qZWN0KSB7XHJcbiAgICAgICAgdGhpcy5wcm9qZWN0cy5wdXNoKHByb2plY3QpO1xyXG4gICAgfVxyXG4gICAgZGVsZXRlUHJvamVjdChwcm9qZWN0KSB7XHJcbiAgICAgICAgdGhpcy5wcm9qZWN0cy5zcGxpY2UodGhpcy5wcm9qZWN0cy5pbmRleE9mKHByb2plY3QpLCAxKTtcclxuICAgIH1cclxuICAgIGVkaXRQcm9qZWN0KHByb2plY3QpIHtcclxuICAgICAgICBsZXQgbmFtZSA9IHByb21wdCgnQ2hvb3NlIGEgbmV3IG5hbWUgZm9yIHlvdXIgcHJvamVjdDonKTtcclxuICAgICAgICBpZiAobmFtZSAhPSBudWxsICYmIG5hbWUgIT0gJycpIHtcclxuICAgICAgICAgICAgdGhpcy5wcm9qZWN0c1t0aGlzLnByb2plY3RzLmluZGV4T2YocHJvamVjdCldLnNldE5hbWUobmFtZSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcbn0iLCJleHBvcnQgY2xhc3MgUHJvamVjdCB7XHJcblxyXG5cclxuICAgIGNvbnN0cnVjdG9yKG5hbWUsIHRhc2tzID0gW10pIHtcclxuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xyXG4gICAgICAgIHRoaXMudGFza3MgPSB0YXNrcztcclxuICAgIH1cclxuXHJcbiAgICBhZGRUYXNrKHRhc2spIHtcclxuICAgICAgICB0aGlzLnRhc2tzLnB1c2godGFzayk7XHJcbiAgICB9XHJcbiAgICBkZWxldGVUYXNrKHRhc2spIHtcclxuICAgICAgICB0aGlzLnRhc2tzLnNwbGljZSh0aGlzLnRhc2tzLmluZGV4T2YodGFzayksIDEpO1xyXG4gICAgfVxyXG5cclxuICAgIHNldE5hbWUobmFtZSkge1xyXG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XHJcbiAgICB9XHJcbiAgICBnZXROYW1lKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLm5hbWU7XHJcbiAgICB9XHJcbiAgICBnZXRTaXplKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnRhc2tzLmxlbmd0aFxyXG4gICAgfVxyXG4gICAgZ2V0VGFza3MoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMudGFza3M7XHJcbiAgICB9XHJcbiAgICBzZXRUYXNrcyh0YXNrcykge1xyXG4gICAgICAgIHRoaXMudGFza3MgPSB0YXNrcztcclxuICAgIH1cclxufSIsImV4cG9ydCBjbGFzcyBUYXNrIHtcclxuXHJcblxyXG4gICAgY29uc3RydWN0b3IobmFtZSwgZGVzY3JpcHRpb24sIGRhdGUgPSBcIjAwMDAtMDAtMDBcIiwgaXNDb21wbGV0ZWQgPSBmYWxzZSkge1xyXG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XHJcbiAgICAgICAgdGhpcy5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uO1xyXG4gICAgICAgIHRoaXMuZGF0ZSA9IGRhdGU7XHJcbiAgICAgICAgdGhpcy5pc0NvbXBsZXRlZCA9IGlzQ29tcGxldGVkO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBzZXROYW1lKG5hbWUpIHtcclxuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xyXG4gICAgfVxyXG4gICAgc2V0RGVzY3JpcHRpb24oZGVzY3JpcHRpb24pIHtcclxuICAgICAgICB0aGlzLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XHJcbiAgICB9XHJcbiAgICBzZXREYXRlKGRhdGUpIHtcclxuICAgICAgICB0aGlzLmRhdGUgPSBkYXRlO1xyXG4gICAgfVxyXG4gICAgc2V0SXNDb21wbGV0ZWQoaXNDb21wbGV0ZWQpIHtcclxuICAgICAgICB0aGlzLmlzQ29tcGxldGVkID0gaXNDb21wbGV0ZWQ7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIGdldE5hbWUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubmFtZTtcclxuICAgIH1cclxuICAgIGdldERlc2NyaXB0aW9uKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmRlc2NyaXB0aW9uO1xyXG4gICAgfVxyXG4gICAgZ2V0RGF0ZSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5kYXRlO1xyXG4gICAgfVxyXG4gICAgZ2V0SXNDb21wbGV0ZWQoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaXNDb21wbGV0ZWQ7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgeyByZW5kZXJMYXlvdXQgfSBmcm9tIFwiLi4vVUkvbWFpbkxheW91dFwiO1xyXG5pbXBvcnQgeyByZW5kZXJIZWFkZXIgfSBmcm9tICcuLi9VSS9oZWFkZXInO1xyXG5pbXBvcnQgeyByZW5kZXJOYXYgfSBmcm9tICcuLi9VSS9uYXYnO1xyXG5cclxuaW1wb3J0IHByb2plY3QgZnJvbSAnLi4vaWNvbnMvcHJvamVjdC5zdmcnO1xyXG5pbXBvcnQgZGVsZXRlSWNvbiBmcm9tICcuLi9pY29ucy9kZWxldGUuc3ZnJztcclxuaW1wb3J0IGVkaXQgZnJvbSAnLi4vaWNvbnMvZWRpdC5zdmcnO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHJlbmRlclBhZ2UoKSB7XHJcbiAgICBjb25zdCBib2R5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYm9keScpO1xyXG4gICAgcmVuZGVyTGF5b3V0KGJvZHkpO1xyXG5cclxuICAgIGNvbnN0IGhlYWRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2hlYWRlcicpO1xyXG4gICAgcmVuZGVySGVhZGVyKGhlYWRlcik7XHJcblxyXG4gICAgY29uc3QgbmF2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignbmF2Jyk7XHJcbiAgICByZW5kZXJOYXYobmF2KTtcclxufVxyXG5cclxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cclxuXHJcbmltcG9ydCB7IEFwcEhhbmRsZXIgfSBmcm9tIFwiLi9BcHBIYW5kbGVyXCI7XHJcbmltcG9ydCB7IFByb2plY3QgfSBmcm9tIFwiLi9Qcm9qZWN0XCI7XHJcbmltcG9ydCB7IFRhc2sgfSBmcm9tIFwiLi9UYXNrXCI7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gbWFpbigpIHtcclxuXHJcbiAgICBsZXQgYXBwSGFuZGxlciA9IG5ldyBBcHBIYW5kbGVyKCk7XHJcblxyXG4gICAgbGV0IGRhdGE7XHJcblxyXG4gICAgaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdoYW5kbGVyRGF0YScpICE9IG51bGwpIHtcclxuICAgICAgICBkYXRhID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnaGFuZGxlckRhdGEnKSk7XHJcbiAgICB9XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkYXRhLnByb2plY3RzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgbGV0IG5hbWUgPSBkYXRhLnByb2plY3RzW2ldLm5hbWU7XHJcbiAgICAgICAgbGV0IHByb2ogPSBuZXcgUHJvamVjdChuYW1lKTtcclxuICAgICAgICBhcHBIYW5kbGVyLmFkZFByb2plY3QocHJvaik7XHJcbiAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBkYXRhLnByb2plY3RzW2ldLnRhc2tzLmxlbmd0aDsgaisrKSB7XHJcbiAgICAgICAgICAgIGxldCBuYW1lID0gZGF0YS5wcm9qZWN0c1tpXS50YXNrc1tqXS5uYW1lO1xyXG4gICAgICAgICAgICBsZXQgZGVzY3JpcHRpb24gPSBkYXRhLnByb2plY3RzW2ldLnRhc2tzW2pdLmRlc2NyaXB0aW9uO1xyXG4gICAgICAgICAgICBsZXQgZGF0ZSA9IGRhdGEucHJvamVjdHNbaV0udGFza3Nbal0uZGF0ZTtcclxuICAgICAgICAgICAgbGV0IGlzQ29tcGxldGVkID0gZGF0YS5wcm9qZWN0c1tpXS50YXNrc1tqXS5pc0NvbXBsZXRlZDtcclxuICAgICAgICAgICAgbGV0IHRhc2sgPSBuZXcgVGFzayhuYW1lLCBkZXNjcmlwdGlvbiwgZGF0ZSwgaXNDb21wbGV0ZWQpO1xyXG4gICAgICAgICAgICBhcHBIYW5kbGVyLmdldFByb2plY3RzKClbaV0uYWRkVGFzayh0YXNrKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgYWRkUHJvamVjdEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNhZGQnKTtcclxuXHJcbiAgICBhZGRQcm9qZWN0QnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgIGxldCBuYW1lID0gcHJvbXB0KCdOYW1lIHlvdXIgbmV3IHByb2plY3QnKTtcclxuICAgICAgICBpZiAobmFtZSAhPSBudWxsICYmIG5hbWUgIT0gJycpIHtcclxuICAgICAgICAgICAgbGV0IG5ld1Byb2plY3QgPSBuZXcgUHJvamVjdChuYW1lKTtcclxuICAgICAgICAgICAgYXBwSGFuZGxlci5hZGRQcm9qZWN0KG5ld1Byb2plY3QpO1xyXG4gICAgICAgICAgICByZW5kZXJQcm9qZWN0c1RhYihwcm9qZWN0c1VsLCBhcHBIYW5kbGVyLmdldFByb2plY3RzKCkpO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhhcHBIYW5kbGVyKTtcclxuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2hhbmRsZXJEYXRhJywgSlNPTi5zdHJpbmdpZnkoYXBwSGFuZGxlcikpO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIGNvbnN0IHByb2plY3RzVWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcHJvamVjdHMtbGlzdCcpO1xyXG5cclxuICAgIGZ1bmN0aW9uIHJlbmRlclByb2plY3RzVGFiKGNvbnRhaW5lckVsZW1lbnQsIHByb2plY3RMaXN0KSB7XHJcbiAgICAgICAgbGV0IEhUTUxDb250ZW50ID0gJyc7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwcm9qZWN0TGlzdC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBIVE1MQ29udGVudCArPSBgPGxpPjxpbWcgY2xhc3M9XCJpY29uXCIgc3JjPVwiJHtwcm9qZWN0fVwiIGFsdD1cIlByb2plY3QgSWNvblwiPjxidXR0b24gaWQ9XCJvcGVuLWJ0bi0ke2l9XCI+JHtwcm9qZWN0TGlzdFtpXS5nZXROYW1lKCl9PC9idXR0b24+Jm5ic3A8ZGl2IGNsYXNzPVwiYmFkZ2VyXCI+JHtwcm9qZWN0TGlzdFtpXS5nZXRTaXplKCl9PC9kaXY+XHJcbiAgICAgICAgICAgIDxidXR0b24gaWQ9XCJlZHQtYnRuLSR7aX1cIj48aW1nIGNsYXNzPVwiaWNvblwiIHNyYz1cIiR7ZWRpdH1cIiBhbHQ9XCJFZGl0IEljb25cIj48L2J1dHRvbj48YnV0dG9uIGlkPVwiZGVsLWJ0bi0ke2l9XCI+PGltZyBjbGFzcz1cImljb25cIiBzcmM9XCIke2RlbGV0ZUljb259XCIgYWx0PVwiRGVsZXRlIEljb25cIjwvYnV0dG9uPlxyXG4gICAgICAgICAgICA8L2xpPmA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnRhaW5lckVsZW1lbnQuaW5uZXJIVE1MID0gSFRNTENvbnRlbnQ7XHJcbiAgICAgICAgYWRkUHJvamVjdExpc3RlbmVycyhwcm9qZWN0TGlzdCk7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IG1haW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiYm9keSA+IGRpdiA+IG1haW5cIik7XHJcblxyXG4gICAgZnVuY3Rpb24gYWRkUHJvamVjdExpc3RlbmVycyhwcm9qZWN0TGlzdCkge1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcHJvamVjdExpc3QubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYGRlbC1idG4tJHtpfWApLm9uY2xpY2sgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBhcHBIYW5kbGVyLmRlbGV0ZVByb2plY3QocHJvamVjdExpc3RbaV0pO1xyXG4gICAgICAgICAgICAgICAgcmVuZGVyUHJvamVjdHNUYWIocHJvamVjdHNVbCwgYXBwSGFuZGxlci5nZXRQcm9qZWN0cygpKTtcclxuICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdoYW5kbGVyRGF0YScsIEpTT04uc3RyaW5naWZ5KGFwcEhhbmRsZXIpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgZWR0LWJ0bi0ke2l9YCkub25jbGljayA9ICgpID0+IHtcclxuICAgICAgICAgICAgICAgIGFwcEhhbmRsZXIuZWRpdFByb2plY3QocHJvamVjdExpc3RbaV0pO1xyXG4gICAgICAgICAgICAgICAgcmVuZGVyUHJvamVjdHNUYWIocHJvamVjdHNVbCwgYXBwSGFuZGxlci5nZXRQcm9qZWN0cygpKTtcclxuICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdoYW5kbGVyRGF0YScsIEpTT04uc3RyaW5naWZ5KGFwcEhhbmRsZXIpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgb3Blbi1idG4tJHtpfWApLm9uY2xpY2sgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICByZW5kZXJQcm9qZWN0Q29udGVudChtYWluLCBhcHBIYW5kbGVyLmdldFByb2plY3RzKClbaV0pO1xyXG4gICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2hhbmRsZXJEYXRhJywgSlNPTi5zdHJpbmdpZnkoYXBwSGFuZGxlcikpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHJlbmRlclByb2plY3RDb250ZW50KGNvbnRhaW5lckVsZW1lbnQsIHByb2plY3QpIHtcclxuICAgICAgICBsZXQgSFRNTENvbnRlbnQgPSAnPHVsPic7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwcm9qZWN0LmdldFRhc2tzKCkubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgSFRNTENvbnRlbnQgKz0gYDxsaWA7XHJcblxyXG4gICAgICAgICAgICBpZiAocHJvamVjdC5nZXRUYXNrcygpW2ldLmdldElzQ29tcGxldGVkKCkpIHtcclxuICAgICAgICAgICAgICAgIEhUTUxDb250ZW50ICs9IGAgc3R5bGU9XCJ0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcImA7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIEhUTUxDb250ZW50ICs9IGA+PHNwYW4+JHtwcm9qZWN0LmdldFRhc2tzKClbaV0uZ2V0TmFtZSgpfTwvc3Bhbj48YnV0dG9uIGlkPVwiZWR0LW5hbWUtJHtpfVwiPjxpbWcgY2xhc3M9XCJpY29uXCIgc3JjPVwiJHtlZGl0fVwiIGFsdD1cIkVkaXQgSWNvblwiPjwvYnV0dG9uPlxyXG4gICAgICAgICAgICA8c3Bhbj4ke3Byb2plY3QuZ2V0VGFza3MoKVtpXS5nZXREZXNjcmlwdGlvbigpfTwvc3Bhbj48YnV0dG9uIGlkPVwiZWR0LWRlc2MtJHtpfVwiPjxpbWcgY2xhc3M9XCJpY29uXCIgc3JjPVwiJHtlZGl0fVwiIGFsdD1cIkVkaXQgSWNvblwiPjwvYnV0dG9uPlxyXG4gICAgICAgICAgICA8aW5wdXQgaWQ9XCJkYXRlLSR7aX1cIiB0eXBlPVwiZGF0ZVwiIHZhbHVlPVwiJHtwcm9qZWN0LmdldFRhc2tzKClbaV0uZ2V0RGF0ZSgpfVwiPjxpbnB1dCBpZD1cImNoZWNrLSR7aX1cIiB0eXBlPVwiY2hlY2tib3hcIiBgO1xyXG4gICAgICAgICAgICBpZiAocHJvamVjdC5nZXRUYXNrcygpW2ldLmdldElzQ29tcGxldGVkKCkpIHtcclxuICAgICAgICAgICAgICAgIEhUTUxDb250ZW50ICs9IFwiY2hlY2tlZFwiO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChwcm9qZWN0ICE9IHByb2plY3RBbGxUYXNrcykge1xyXG4gICAgICAgICAgICAgICAgSFRNTENvbnRlbnQgKz0gYD48YnV0dG9uIGlkPVwiZGVsLSR7aX1cIj48aW1nIGNsYXNzPVwiaWNvblwiIHNyYz1cIiR7ZGVsZXRlSWNvbn1cIiBhbHQ9XCJEZWxldGUgSWNvblwiPjwvYnV0dG9uPjwvbGk+YDtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIEhUTUxDb250ZW50ICs9IGA+PC9saT5gO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAocHJvamVjdCAhPSBwcm9qZWN0QWxsVGFza3MpIHtcclxuICAgICAgICAgICAgSFRNTENvbnRlbnQgKz0gJzwvdWw+PGJ1dHRvbiBpZD1cImFkZC10YXNrXCI+QWRkIFRhc2s8L2J1dHRvbj4nO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb250YWluZXJFbGVtZW50LmlubmVySFRNTCA9IEhUTUxDb250ZW50O1xyXG5cclxuICAgICAgICBhZGRUYXNrTGlzdGVuZXJzKHByb2plY3QpO1xyXG4gICAgICAgIGlmIChwcm9qZWN0ICE9IHByb2plY3RBbGxUYXNrcykge1xyXG4gICAgICAgICAgICBsZXQgYWRkVGFza0J0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYWRkLXRhc2tcIik7XHJcbiAgICAgICAgICAgIGFkZE5ld1Rhc2tMaXN0ZW5lcihhZGRUYXNrQnRuLCBwcm9qZWN0KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGFkZFRhc2tMaXN0ZW5lcnMocHJvamVjdCkge1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcHJvamVjdC5nZXRUYXNrcygpLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGBlZHQtbmFtZS0ke2l9YCkub25jbGljayA9ICgpID0+IHtcclxuICAgICAgICAgICAgICAgIGxldCBuYW1lID0gcHJvbXB0KFwiQ2hvb3NlIGEgbmV3IG5hbWU6XCIpO1xyXG4gICAgICAgICAgICAgICAgaWYgKG5hbWUgIT0gbnVsbCAmJiBuYW1lICE9ICcnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcHJvamVjdC5nZXRUYXNrcygpW2ldLnNldE5hbWUobmFtZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyUHJvamVjdENvbnRlbnQobWFpbiwgcHJvamVjdCk7XHJcbiAgICAgICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2hhbmRsZXJEYXRhJywgSlNPTi5zdHJpbmdpZnkoYXBwSGFuZGxlcikpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGBlZHQtZGVzYy0ke2l9YCkub25jbGljayA9ICgpID0+IHtcclxuICAgICAgICAgICAgICAgIGxldCBkZXNjID0gcHJvbXB0KFwiQ2hvb3NlIGEgbmV3IGRlc2NyaXB0aW9uOlwiKTtcclxuICAgICAgICAgICAgICAgIGlmIChkZXNjID09IFwiXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICBkZXNjID0gXCJObyBkZXNjcmlwdGlvbi4uLlwiO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKGRlc2MgPT0gbnVsbCkge30gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcHJvamVjdC5nZXRUYXNrcygpW2ldLnNldERlc2NyaXB0aW9uKGRlc2MpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJlbmRlclByb2plY3RDb250ZW50KG1haW4sIHByb2plY3QpO1xyXG4gICAgICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdoYW5kbGVyRGF0YScsIEpTT04uc3RyaW5naWZ5KGFwcEhhbmRsZXIpKTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYGRhdGUtJHtpfWApLm9uY2hhbmdlID0gKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgbGV0IGRhdGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgZGF0ZS0ke2l9YCkudmFsdWU7XHJcbiAgICAgICAgICAgICAgICBwcm9qZWN0LmdldFRhc2tzKClbaV0uc2V0RGF0ZShkYXRlKTtcclxuICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdoYW5kbGVyRGF0YScsIEpTT04uc3RyaW5naWZ5KGFwcEhhbmRsZXIpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgY2hlY2stJHtpfWApLm9uY2xpY2sgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBsZXQgY2hlY2tlZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGBjaGVjay0ke2l9YCkuY2hlY2tlZDtcclxuICAgICAgICAgICAgICAgIHByb2plY3QuZ2V0VGFza3MoKVtpXS5zZXRJc0NvbXBsZXRlZChjaGVja2VkKTtcclxuICAgICAgICAgICAgICAgIHJlbmRlclByb2plY3RDb250ZW50KG1haW4sIHByb2plY3QpO1xyXG4gICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2hhbmRsZXJEYXRhJywgSlNPTi5zdHJpbmdpZnkoYXBwSGFuZGxlcikpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChwcm9qZWN0ICE9IHByb2plY3RBbGxUYXNrcykge1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYGRlbC0ke2l9YCkub25jbGljayA9ICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgdGFzayA9IHByb2plY3QuZ2V0VGFza3MoKVtpXTtcclxuICAgICAgICAgICAgICAgICAgICBwcm9qZWN0LmRlbGV0ZVRhc2sodGFzayk7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyUHJvamVjdENvbnRlbnQobWFpbiwgcHJvamVjdCk7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyUHJvamVjdHNUYWIocHJvamVjdHNVbCwgYXBwSGFuZGxlci5nZXRQcm9qZWN0cygpKTtcclxuICAgICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnaGFuZGxlckRhdGEnLCBKU09OLnN0cmluZ2lmeShhcHBIYW5kbGVyKSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGFkZE5ld1Rhc2tMaXN0ZW5lcihidXR0b24sIHByb2plY3QpIHtcclxuICAgICAgICBidXR0b24ub25jbGljayA9ICgpID0+IHtcclxuICAgICAgICAgICAgbGV0IG5hbWUgPSBwcm9tcHQoXCJDaG9vc2UgeW91ciB0YXNrIG5hbWVcIik7XHJcbiAgICAgICAgICAgIGxldCBkZXNjcmlwdGlvbiA9IHByb21wdChcIkNob29zZSB5b3VyIHRhc2sgZGVzY3JpcHRpb25cIik7XHJcbiAgICAgICAgICAgIGlmIChkZXNjcmlwdGlvbiA9PSBudWxsIHx8IGRlc2NyaXB0aW9uID09IFwiXCIpIHtcclxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uID0gXCJObyBkZXNjcmlwdGlvbi4uLlwiO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChuYW1lICE9IG51bGwgJiYgbmFtZSAhPSAnJykge1xyXG4gICAgICAgICAgICAgICAgbGV0IHRhc2sgPSBuZXcgVGFzayhuYW1lLCBkZXNjcmlwdGlvbik7XHJcbiAgICAgICAgICAgICAgICBwcm9qZWN0LmFkZFRhc2sodGFzayk7XHJcbiAgICAgICAgICAgICAgICByZW5kZXJQcm9qZWN0Q29udGVudChtYWluLCBwcm9qZWN0KTtcclxuICAgICAgICAgICAgICAgIHJlbmRlclByb2plY3RzVGFiKHByb2plY3RzVWwsIGFwcEhhbmRsZXIuZ2V0UHJvamVjdHMoKSk7XHJcbiAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnaGFuZGxlckRhdGEnLCBKU09OLnN0cmluZ2lmeShhcHBIYW5kbGVyKSk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGxldCBwcm9qZWN0QWxsVGFza3MgPSBuZXcgUHJvamVjdChcIkFsbFwiKTtcclxuICAgIHVwZGF0ZUFsbFRhc2tzKCk7XHJcbiAgICByZW5kZXJQcm9qZWN0Q29udGVudChtYWluLCBwcm9qZWN0QWxsVGFza3MpO1xyXG4gICAgcmVuZGVyUHJvamVjdHNUYWIocHJvamVjdHNVbCwgYXBwSGFuZGxlci5nZXRQcm9qZWN0cygpKTtcclxuXHJcbiAgICBmdW5jdGlvbiB1cGRhdGVBbGxUYXNrcygpIHtcclxuICAgICAgICBsZXQgYWxsVGFza3MgPSBbXTtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFwcEhhbmRsZXIuZ2V0UHJvamVjdHMoKS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IGFwcEhhbmRsZXIuZ2V0UHJvamVjdHMoKVtpXS5nZXRUYXNrcygpLmxlbmd0aDsgaisrKSB7XHJcbiAgICAgICAgICAgICAgICBhbGxUYXNrcy5wdXNoKGFwcEhhbmRsZXIuZ2V0UHJvamVjdHMoKVtpXS5nZXRUYXNrcygpW2pdKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBwcm9qZWN0QWxsVGFza3Muc2V0VGFza3MoYWxsVGFza3MpO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBhbGxUYXNrc0J0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJib2R5ID4gZGl2ID4gbmF2ID4gdWw6bnRoLWNoaWxkKDEpID4gbGk6bnRoLWNoaWxkKDEpID4gYnV0dG9uXCIpO1xyXG4gICAgYWxsVGFza3NCdG4ub25jbGljayA9ICgpID0+IHtcclxuICAgICAgICB1cGRhdGVBbGxUYXNrcygpO1xyXG4gICAgICAgIHJlbmRlclByb2plY3RDb250ZW50KG1haW4sIHByb2plY3RBbGxUYXNrcyk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gdXBkYXRlVG9kYXlUYXNrcygpIHtcclxuICAgICAgICBsZXQgdGltZSA9IG5ldyBEYXRlKCk7XHJcbiAgICAgICAgbGV0IGZvcm1hdHRlZERhdGUgPSBgJHt0aW1lLmdldEZ1bGxZZWFyKCl9LSR7dGltZS5nZXRNb250aCgpICsgMX0tJHt0aW1lLmdldERhdGUoKX1gO1xyXG4gICAgICAgIGxldCB0b2RheVRhc2tzID0gW107XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcHBIYW5kbGVyLmdldFByb2plY3RzKCkubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBhcHBIYW5kbGVyLmdldFByb2plY3RzKClbaV0uZ2V0VGFza3MoKS5sZW5ndGg7IGorKykge1xyXG4gICAgICAgICAgICAgICAgaWYgKGFwcEhhbmRsZXIuZ2V0UHJvamVjdHMoKVtpXS5nZXRUYXNrcygpW2pdLmdldERhdGUoKSA9PSBmb3JtYXR0ZWREYXRlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdG9kYXlUYXNrcy5wdXNoKGFwcEhhbmRsZXIuZ2V0UHJvamVjdHMoKVtpXS5nZXRUYXNrcygpW2pdKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBwcm9qZWN0QWxsVGFza3Muc2V0VGFza3ModG9kYXlUYXNrcyk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgdG9kYXlUYXNrc0J0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJib2R5ID4gZGl2ID4gbmF2ID4gdWw6bnRoLWNoaWxkKDEpID4gbGk6bnRoLWNoaWxkKDIpID4gYnV0dG9uXCIpO1xyXG4gICAgdG9kYXlUYXNrc0J0bi5vbmNsaWNrID0gKCkgPT4ge1xyXG4gICAgICAgIHVwZGF0ZVRvZGF5VGFza3MoKTtcclxuICAgICAgICByZW5kZXJQcm9qZWN0Q29udGVudChtYWluLCBwcm9qZWN0QWxsVGFza3MpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHVwZGF0ZVdlZWtUYXNrcygpIHtcclxuICAgICAgICBsZXQgdGltZU5vdyA9IERhdGUubm93KCk7XHJcbiAgICAgICAgbGV0IHRpbWVOZXh0V2VlayA9IHRpbWVOb3cgKyA2MDQ4MDAwMDA7XHJcblxyXG5cclxuICAgICAgICBsZXQgd2Vla1Rhc2tzID0gW107XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcHBIYW5kbGVyLmdldFByb2plY3RzKCkubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBhcHBIYW5kbGVyLmdldFByb2plY3RzKClbaV0uZ2V0VGFza3MoKS5sZW5ndGg7IGorKykge1xyXG4gICAgICAgICAgICAgICAgbGV0IGRhdGUgPSBuZXcgRGF0ZShhcHBIYW5kbGVyLmdldFByb2plY3RzKClbaV0uZ2V0VGFza3MoKVtqXS5nZXREYXRlKCkpO1xyXG4gICAgICAgICAgICAgICAgZGF0ZSA9IGRhdGUuZ2V0VGltZSgpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGRhdGUgPiB0aW1lTm93ICYmIGRhdGUgPCB0aW1lTmV4dFdlZWspIHtcclxuICAgICAgICAgICAgICAgICAgICB3ZWVrVGFza3MucHVzaChhcHBIYW5kbGVyLmdldFByb2plY3RzKClbaV0uZ2V0VGFza3MoKVtqXSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcHJvamVjdEFsbFRhc2tzLnNldFRhc2tzKHdlZWtUYXNrcyk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3Qgd2Vla1Rhc2tzQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImJvZHkgPiBkaXYgPiBuYXYgPiB1bDpudGgtY2hpbGQoMSkgPiBsaTpudGgtY2hpbGQoMykgPiBidXR0b25cIik7XHJcbiAgICB3ZWVrVGFza3NCdG4ub25jbGljayA9ICgpID0+IHtcclxuICAgICAgICB1cGRhdGVXZWVrVGFza3MoKTtcclxuICAgICAgICByZW5kZXJQcm9qZWN0Q29udGVudChtYWluLCBwcm9qZWN0QWxsVGFza3MpO1xyXG4gICAgfVxyXG59IiwiZXhwb3J0IGZ1bmN0aW9uIHJlbmRlckxheW91dChxdWVyeSkge1xyXG4gICAgcXVlcnkuaW5uZXJIVE1MID0gYFxyXG4gICAgPGhlYWRlcj48L2hlYWRlcj5cclxuICAgIDxkaXYgY2xhc3M9XCJtYWluLWNvbnRhaW5lclwiPlxyXG4gICAgICAgIDxuYXY+PC9uYXY+XHJcbiAgICAgICAgPG1haW4+PC9tYWluPlxyXG4gICAgPC9kaXY+XHJcbiAgICBgO1xyXG59IiwiZXhwb3J0IGZ1bmN0aW9uIHJlbmRlckhlYWRlcihxdWVyeSkge1xyXG4gICAgcXVlcnkuaW5uZXJIVE1MID0gYFxyXG4gICAgPGgxIGNsYXNzPVwiaGVhZGVyLXRpdGxlXCI+4pyU77iPRG9pbmdJdDwvaDE+XHJcbiAgICBgO1xyXG59IiwiaW1wb3J0IGFsbCBmcm9tICcuLi9pY29ucy9hbGwuc3ZnJztcclxuaW1wb3J0IHRvZGF5IGZyb20gJy4uL2ljb25zL3RvZGF5LnN2Zyc7XHJcbmltcG9ydCB3ZWVrIGZyb20gJy4uL2ljb25zL3dlZWsuc3ZnJztcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiByZW5kZXJOYXYocXVlcnkpIHtcclxuICAgIHF1ZXJ5LmlubmVySFRNTCA9IGBcclxuICAgIDx1bD5cclxuICAgICAgICA8bGk+PGltZyBjbGFzcz1cImljb25cIiBzcmM9XCIke2FsbH1cIiBhbHQ9XCJBbGwgSWNvblwiPjxidXR0b24+QWxsPC9idXR0b24+PC9saT5cclxuICAgICAgICA8bGk+PGltZyBjbGFzcz1cImljb25cIiBzcmM9XCIke3RvZGF5fVwiIGFsdD1cIlRvZGF5IEljb25cIj48YnV0dG9uPlRvZGF5PC9idXR0b24+PC9saT5cclxuICAgICAgICA8bGk+PGltZyBjbGFzcz1cImljb25cIiBzcmM9XCIke3dlZWt9XCIgYWx0PVwiVGhpcyB3ZWVrIEljb25cIj48YnV0dG9uPk5leHQgNyBkYXlzPC9idXR0b24+PC9saT5cclxuICAgIDwvdWw+XHJcbiAgICA8c3Bhbj5Qcm9qZWN0czwvc3Bhbj5cclxuICAgIDx1bCBpZD1cInByb2plY3RzLWxpc3RcIj5cclxuICAgIDwvdWw+XHJcbiAgICA8dWw+XHJcbiAgICAgICAgPGxpIGlkPVwiYWRkLWNvbnRhaW5lclwiPjxidXR0b24gaWQ9XCJhZGRcIj5BZGQgUHJvamVjdDwvYnV0dG9uPjwvbGk+XHJcbiAgICA8L3VsPlxyXG4gICAgYDtcclxufSIsImltcG9ydCAnLi9zdHlsZXMvbWFpbkxheW91dC5jc3MnO1xyXG5pbXBvcnQgJy4vc3R5bGVzL2hlYWRlci5jc3MnO1xyXG5pbXBvcnQgJy4vc3R5bGVzL25hdi5jc3MnO1xyXG5pbXBvcnQgJy4vc3R5bGVzL3Rhc2tzLmNzcyc7XHJcblxyXG5pbXBvcnQgeyByZW5kZXJQYWdlIH0gZnJvbSAnLi9sb2dpYy9ET01NYW5pcHVsYXRpb24nO1xyXG5yZW5kZXJQYWdlKCk7XHJcblxyXG5pbXBvcnQgeyBtYWluIH0gZnJvbSAnLi9sb2dpYy9ET01NYW5pcHVsYXRpb24nO1xyXG5tYWluKCk7Il0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlIiwic291cmNlUm9vdCIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImciLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInJlcGxhY2UiLCJwIiwibmMiLCJBcHBIYW5kbGVyIiwiY29uc3RydWN0b3IiLCJwcm9qZWN0cyIsImdldFByb2plY3RzIiwiYWRkUHJvamVjdCIsInByb2plY3QiLCJkZWxldGVQcm9qZWN0IiwiaW5kZXhPZiIsImVkaXRQcm9qZWN0IiwibmFtZSIsInByb21wdCIsInNldE5hbWUiLCJQcm9qZWN0IiwidGFza3MiLCJhZGRUYXNrIiwidGFzayIsImRlbGV0ZVRhc2siLCJnZXROYW1lIiwiZ2V0U2l6ZSIsImdldFRhc2tzIiwic2V0VGFza3MiLCJUYXNrIiwiZGVzY3JpcHRpb24iLCJkYXRlIiwiaXNDb21wbGV0ZWQiLCJzZXREZXNjcmlwdGlvbiIsInNldERhdGUiLCJzZXRJc0NvbXBsZXRlZCIsImdldERlc2NyaXB0aW9uIiwiZ2V0RGF0ZSIsImdldElzQ29tcGxldGVkIiwiaW5uZXJIVE1MIiwiYXBwSGFuZGxlciIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJwYXJzZSIsInByb2oiLCJqIiwiYWRkRXZlbnRMaXN0ZW5lciIsIm5ld1Byb2plY3QiLCJyZW5kZXJQcm9qZWN0c1RhYiIsInByb2plY3RzVWwiLCJjb25zb2xlIiwibG9nIiwic2V0SXRlbSIsImNvbnRhaW5lckVsZW1lbnQiLCJwcm9qZWN0TGlzdCIsIkhUTUxDb250ZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJvbmNsaWNrIiwicmVuZGVyUHJvamVjdENvbnRlbnQiLCJtYWluIiwiYWRkUHJvamVjdExpc3RlbmVycyIsInByb2plY3RBbGxUYXNrcyIsImRlc2MiLCJvbmNoYW5nZSIsInZhbHVlIiwiY2hlY2tlZCIsImFkZFRhc2tMaXN0ZW5lcnMiLCJidXR0b24iLCJhZGROZXdUYXNrTGlzdGVuZXIiLCJ1cGRhdGVBbGxUYXNrcyIsImFsbFRhc2tzIiwidGltZSIsIkRhdGUiLCJmb3JtYXR0ZWREYXRlIiwiZ2V0RnVsbFllYXIiLCJnZXRNb250aCIsInRvZGF5VGFza3MiLCJ1cGRhdGVUb2RheVRhc2tzIiwidGltZU5vdyIsIm5vdyIsInRpbWVOZXh0V2VlayIsIndlZWtUYXNrcyIsImdldFRpbWUiLCJ1cGRhdGVXZWVrVGFza3MiXSwic291cmNlUm9vdCI6IiJ9