(()=>{"use strict";var n={497:(n,r,t)=>{t.d(r,{Z:()=>i});var e=t(537),o=t.n(e),a=t(645),s=t.n(a)()(o());s.push([n.id,".header-title {\r\n    color: var(--light);\r\n    font-family: var(--unbounded);\r\n}","",{version:3,sources:["webpack://./src/styles/header.css"],names:[],mappings:"AAAA;IACI,mBAAmB;IACnB,6BAA6B;AACjC",sourcesContent:[".header-title {\r\n    color: var(--light);\r\n    font-family: var(--unbounded);\r\n}"],sourceRoot:""}]);const i=s},63:(n,r,t)=>{t.d(r,{Z:()=>i});var e=t(537),o=t.n(e),a=t(645),s=t.n(a)()(o());s.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Unbounded&display=swap);"]),s.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap);"]),s.push([n.id,":root {\r\n    --light: #FFFFFF;\r\n    --dark: #0d1321;\r\n    --grey: #D2D7DF;\r\n    --unbounded: 'Unbounded', cursive;\r\n    --roboto: 'Roboto', sans-serif;\r\n}\r\n\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    /*border: 1px solid red;*/\r\n}\r\n\r\nheader {\r\n    height: 10vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: var(--dark);\r\n}\r\n\r\n.main-container {\r\n    display: flex;\r\n}\r\n\r\nnav {\r\n    flex: 2;\r\n    height: 90vh;\r\n    overflow-y: auto;\r\n}\r\n\r\nmain {\r\n    flex: 8;\r\n    height: 90vh;\r\n}","",{version:3,sources:["webpack://./src/styles/mainLayout.css"],names:[],mappings:"AAEA;IACI,gBAAgB;IAChB,eAAe;IACf,eAAe;IACf,iCAAiC;IACjC,8BAA8B;AAClC;;AAEA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;IACtB,yBAAyB;AAC7B;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,6BAA6B;AACjC;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,OAAO;IACP,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,OAAO;IACP,YAAY;AAChB",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Unbounded&display=swap');\r\n@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');\r\n:root {\r\n    --light: #FFFFFF;\r\n    --dark: #0d1321;\r\n    --grey: #D2D7DF;\r\n    --unbounded: 'Unbounded', cursive;\r\n    --roboto: 'Roboto', sans-serif;\r\n}\r\n\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    /*border: 1px solid red;*/\r\n}\r\n\r\nheader {\r\n    height: 10vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: var(--dark);\r\n}\r\n\r\n.main-container {\r\n    display: flex;\r\n}\r\n\r\nnav {\r\n    flex: 2;\r\n    height: 90vh;\r\n    overflow-y: auto;\r\n}\r\n\r\nmain {\r\n    flex: 8;\r\n    height: 90vh;\r\n}"],sourceRoot:""}]);const i=s},926:(n,r,t)=>{t.d(r,{Z:()=>i});var e=t(537),o=t.n(e),a=t(645),s=t.n(a)()(o());s.push([n.id,"nav {\r\n    font-family: var(--roboto);\r\n    background-color: var(--dark);\r\n    color: var(--light);\r\n    padding-left: 8px;\r\n    padding-right: 8px;\r\n}\r\n\r\nnav ul {\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n}\r\n\r\nnav li button {\r\n    color: var(--light);\r\n    background-color: var(--dark);\r\n    padding: 2px;\r\n    border-radius: 8px;\r\n    border: transparent;\r\n    font-size: larger;\r\n    margin-top: 4px;\r\n    margin-bottom: 4px;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n}\r\n\r\nnav li button:hover {\r\n    color: var(--dark);\r\n    background-color: var(--light);\r\n    transition: 0.3s;\r\n}\r\n\r\nnav span {\r\n    font-size: xx-large;\r\n    font-weight: 700;\r\n}\r\n\r\n#add-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 6px;\r\n}\r\n\r\n#add {\r\n    color: var(--dark);\r\n    background-color: var(--light);\r\n    font-weight: 700;\r\n}\r\n\r\n.icon {\r\n    height: 26.4px;\r\n    width: 26.4px;\r\n    filter: invert(100%) sepia(99%) saturate(119%) hue-rotate(196deg) brightness(116%) contrast(100%);\r\n}\r\n\r\n.badger {\r\n    display: inline;\r\n    background-color: var(--light);\r\n    padding: 1px;\r\n    color: var(--dark);\r\n    border-radius: 2px;\r\n}","",{version:3,sources:["webpack://./src/styles/nav.css"],names:[],mappings:"AAAA;IACI,0BAA0B;IAC1B,6BAA6B;IAC7B,mBAAmB;IACnB,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;IAChB,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;IACnB,6BAA6B;IAC7B,YAAY;IACZ,kBAAkB;IAClB,mBAAmB;IACnB,iBAAiB;IACjB,eAAe;IACf,kBAAkB;IAClB,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,8BAA8B;IAC9B,gBAAgB;AACpB;;AAEA;IACI,mBAAmB;IACnB,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,8BAA8B;IAC9B,gBAAgB;AACpB;;AAEA;IACI,cAAc;IACd,aAAa;IACb,iGAAiG;AACrG;;AAEA;IACI,eAAe;IACf,8BAA8B;IAC9B,YAAY;IACZ,kBAAkB;IAClB,kBAAkB;AACtB",sourcesContent:["nav {\r\n    font-family: var(--roboto);\r\n    background-color: var(--dark);\r\n    color: var(--light);\r\n    padding-left: 8px;\r\n    padding-right: 8px;\r\n}\r\n\r\nnav ul {\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n}\r\n\r\nnav li button {\r\n    color: var(--light);\r\n    background-color: var(--dark);\r\n    padding: 2px;\r\n    border-radius: 8px;\r\n    border: transparent;\r\n    font-size: larger;\r\n    margin-top: 4px;\r\n    margin-bottom: 4px;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n}\r\n\r\nnav li button:hover {\r\n    color: var(--dark);\r\n    background-color: var(--light);\r\n    transition: 0.3s;\r\n}\r\n\r\nnav span {\r\n    font-size: xx-large;\r\n    font-weight: 700;\r\n}\r\n\r\n#add-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 6px;\r\n}\r\n\r\n#add {\r\n    color: var(--dark);\r\n    background-color: var(--light);\r\n    font-weight: 700;\r\n}\r\n\r\n.icon {\r\n    height: 26.4px;\r\n    width: 26.4px;\r\n    filter: invert(100%) sepia(99%) saturate(119%) hue-rotate(196deg) brightness(116%) contrast(100%);\r\n}\r\n\r\n.badger {\r\n    display: inline;\r\n    background-color: var(--light);\r\n    padding: 1px;\r\n    color: var(--dark);\r\n    border-radius: 2px;\r\n}"],sourceRoot:""}]);const i=s},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var t="",e=void 0!==r[5];return r[4]&&(t+="@supports (".concat(r[4],") {")),r[2]&&(t+="@media ".concat(r[2]," {")),e&&(t+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),t+=n(r),e&&(t+="}"),r[2]&&(t+="}"),r[4]&&(t+="}"),t})).join("")},r.i=function(n,t,e,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var s={};if(e)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(s[c]=!0)}for(var l=0;l<n.length;l++){var d=[].concat(n[l]);e&&s[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),r.push(d))}},r}},537:n=>{n.exports=function(n){var r=n[1],t=n[3];if(!t)return r;if("function"==typeof btoa){var e=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(e),a="/*# ".concat(o," */"),s=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[r].concat(s).concat([a]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function t(n){for(var t=-1,e=0;e<r.length;e++)if(r[e].identifier===n){t=e;break}return t}function e(n,e){for(var a={},s=[],i=0;i<n.length;i++){var c=n[i],l=e.base?c[0]+e.base:c[0],d=a[l]||0,A="".concat(l," ").concat(d);a[l]=d+1;var u=t(A),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)r[u].references++,r[u].updater(p);else{var g=o(p,e);e.byIndex=i,r.splice(i,0,{identifier:A,updater:g,references:1})}s.push(A)}return s}function o(n,r){var t=r.domAPI(r);return t.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;t.update(n=r)}else t.remove()}}n.exports=function(n,o){var a=e(n=n||[],o=o||{});return function(n){n=n||[];for(var s=0;s<a.length;s++){var i=t(a[s]);r[i].references--}for(var c=e(n,o),l=0;l<a.length;l++){var d=t(a[l]);0===r[d].references&&(r[d].updater(),r.splice(d,1))}a=c}}},569:n=>{var r={};n.exports=function(n,t){var e=function(n){if(void 0===r[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}r[n]=t}return r[n]}(n);if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");e.appendChild(t)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,t)=>{n.exports=function(n){var r=t.nc;r&&n.setAttribute("nonce",r)}},795:n=>{n.exports=function(n){var r=n.insertStyleElement(n);return{update:function(t){!function(n,r,t){var e="";t.supports&&(e+="@supports (".concat(t.supports,") {")),t.media&&(e+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(e+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),e+=t.css,o&&(e+="}"),t.media&&(e+="}"),t.supports&&(e+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(e+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),r.styleTagTransform(e,n,r.options)}(r,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}}},r={};function t(e){var o=r[e];if(void 0!==o)return o.exports;var a=r[e]={id:e,exports:{}};return n[e](a,a.exports,t),a.exports}t.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return t.d(r,{a:r}),r},t.d=(n,r)=>{for(var e in r)t.o(r,e)&&!t.o(n,e)&&Object.defineProperty(n,e,{enumerable:!0,get:r[e]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var r=t.g.document;if(!n&&r&&(r.currentScript&&(n=r.currentScript.src),!n)){var e=r.getElementsByTagName("script");e.length&&(n=e[e.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),r=t.n(n),e=t(795),o=t.n(e),a=t(569),s=t.n(a),i=t(565),c=t.n(i),l=t(216),d=t.n(l),A=t(589),u=t.n(A),p=t(63),g={};g.styleTagTransform=u(),g.setAttributes=c(),g.insert=s().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=d(),r()(p.Z,g),p.Z&&p.Z.locals&&p.Z.locals;var m=t(497),h={};h.styleTagTransform=u(),h.setAttributes=c(),h.insert=s().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=d(),r()(m.Z,h),m.Z&&m.Z.locals&&m.Z.locals;var f=t(926),v={};v.styleTagTransform=u(),v.setAttributes=c(),v.insert=s().bind(null,"head"),v.domAPI=o(),v.insertStyleElement=d(),r()(f.Z,v),f.Z&&f.Z.locals&&f.Z.locals;const b=t.p+"6e93938839cb814ff0a3.svg",B=t.p+"2662cd22342b7aec3759.svg",I=t.p+"b7fbf4b82de02c03c144.svg",C=t.p+"0f8eae15be24f4e845ee.svg",y=t.p+"3270f2c93c8c138fa6cc.svg",k=t.p+"5b4bbee2e91b8855115c.svg";class x{constructor(n=[]){this.projects=n}getProjects(){return this.projects}addProject(n){this.projects.push(n)}deleteProject(n){this.projects.splice(this.projects.indexOf(n),1)}editProject(n){let r=prompt("Choose a new name for your project:");this.projects[this.projects.indexOf(n)].setName(r)}}class j{constructor(n,r=[]){this.name=n,this.tasks=r}addTask(n){this.tasks.push(n)}deleteTask(n){this.tasks.splice(this.tasks.indexOf(n),1)}setName(n){this.name=n}getName(){return this.name}getSize(){return this.tasks.length}getTasks(){return this.tasks}}class T{constructor(n,r,t="0000-00-00",e=!1){this.name=n,this.description=r,this.date=t,this.isCompleted=e}setName(n){this.name=n}setDescription(n){this.description=n}setDate(n){this.date=n}setIsCompleted(n){this.isCompleted=n}getName(){return this.name}getDescription(){return this.description}getDate(){return this.date}getIsCompleted(){return this.isCompleted}}document.querySelector("body").innerHTML='\n    <header></header>\n    <div class="main-container">\n        <nav></nav>\n        <main></main>\n    </div>\n    ',document.querySelector("header").innerHTML='\n    <h1 class="header-title">✔️DoingIt</h1>\n    ',document.querySelector("nav").innerHTML=`\n    <ul>\n        <li><img class="icon" src="${b}" alt="All Icon"><button>All</button></li>\n        <li><img class="icon" src="${B}" alt="Today Icon"><button>Today</button></li>\n        <li><img class="icon" src="${I}" alt="This week Icon"><button>This Week</button></li>\n    </ul>\n    <span>Projects</span>\n    <ul id="projects-list">\n    </ul>\n    <ul>\n        <li id="add-container"><button id="add">Add Project</button></li>\n    </ul>\n    `,function(){const n=new x;document.querySelector("#add").addEventListener("click",(()=>{let e=prompt("Name your new project");if(null!=e&&""!=e){let o=new j(e);n.addProject(o),t(r,n.getProjects())}}));const r=document.querySelector("#projects-list");function t(a,s){let i="";for(let n=0;n<s.length;n++)i+=`<li><img class="icon" src="${C}" alt="Project Icon"><button id="open-btn-${n}">${s[n].getName()}</button>&nbsp<div class="badger">${s[n].getSize()}</div>\n            <button id="edt-btn-${n}"><img class="icon" src="${k}" alt="Edit Icon"></button><button id="del-btn-${n}"><img class="icon" src="${y}" alt="Delete Icon"</button>\n            </li>`;a.innerHTML=i,function(a){for(let s=0;s<a.length;s++)document.getElementById(`del-btn-${s}`).onclick=()=>{n.deleteProject(a[s]),t(r,n.getProjects())},document.getElementById(`edt-btn-${s}`).onclick=()=>{n.editProject(a[s]),t(r,n.getProjects())},document.getElementById(`open-btn-${s}`).onclick=()=>{o(e,n.getProjects()[s])}}(s)}const e=document.querySelector("body > div > main");function o(a,s){let i="<ul>";for(let n=0;n<s.getTasks().length;n++)i+=`<li><span>${s.getTasks()[n].getName()}</span><button id="edt-name-${n}"><img class="icon" src="${k}" alt="Edit Icon"></button>\n            <span>${s.getTasks()[n].getDescription()}</span><button id="edt-desc-${n}"><img class="icon" src="${k}" alt="Edit Icon"></button>\n            <input id="date-${n}" type="date" value="${s.getTasks()[n].getDate()}"><input id="check-${n}" type="checkbox" `,s.getTasks()[n].getIsCompleted()&&(i+="checked"),i+=`><button id="del-${n}"><img class="icon" src="${y}" alt="Delete Icon"></button></li>`;i+='</ul><button id="add-task">Add Task</button>',a.innerHTML=i;let c=document.querySelector("#add-task");!function(a){for(let s=0;s<a.getTasks().length;s++)document.getElementById(`edt-name-${s}`).onclick=()=>{let n=prompt("Choose a new name:");null!=n&&""!=n&&(a.getTasks()[s].setName(n),o(e,a))},document.getElementById(`edt-desc-${s}`).onclick=()=>{let n=prompt("Choose a new description:");""==n&&(n="No description..."),null==n||(a.getTasks()[s].setDescription(n),o(e,a))},document.getElementById(`date-${s}`).onchange=()=>{let n=document.getElementById(`date-${s}`).value;a.getTasks()[s].setDate(n)},document.getElementById(`check-${s}`).onclick=()=>{let n=document.getElementById(`check-${s}`).checked;a.getTasks()[s].setIsCompleted(n)},document.getElementById(`del-${s}`).onclick=()=>{let i=a.getTasks()[s];a.deleteTask(i),o(e,a),t(r,n.getProjects())}}(s),function(a,s){a.onclick=()=>{let a=prompt("Choose your task name"),i=prompt("Choose your task description");if(null!=i&&""!=i||(i="No description..."),null!=a&&""!=a){let c=new T(a,i);s.addTask(c),o(e,s),t(r,n.getProjects())}}}(c,s)}}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,